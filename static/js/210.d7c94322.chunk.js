(this["webpackJsonppraveenoruganti-courses"]=this["webpackJsonppraveenoruganti-courses"]||[]).push([[210],{779:function(e,n,a){"use strict";a.r(n),n.default=' Let\u2019s consider the same example which is used in Spring JDBC and implement the same using Spring ORM with EclipseLink using hsqldb.\n\nPlease refer [Spring JDBC](https://praveenoruganti.github.io/courses/#/spring/springjdbc) section for hsql database setup and table creation.\n\n**pom.xml**\n\n```jsx\n<project\n  xmlns="http://maven.apache.org/POM/4.0.0"\n  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"\n>\n  <modelVersion>4.0.0</modelVersion>\n  <groupId>PraveenSpringORMUsingEclipseLinkProject</groupId>\n  <artifactId>PraveenSpringORMUsingEclipseLinkProject</artifactId>\n  <version>0.0.1-SNAPSHOT</version>\n  <dependencies>\n    <dependency>\n      <groupId>commons-logging</groupId>\n      <artifactId>commons-logging</artifactId>\n      <version>1.2</version>\n    </dependency>\n    <dependency>\n      <groupId>org.springframework</groupId>\n      <artifactId>spring-beans</artifactId>\n      <version>5.0.4.RELEASE</version>\n    </dependency>\n    <dependency>\n      <groupId>org.springframework</groupId>\n      <artifactId>spring-core</artifactId>\n      <version>5.0.4.RELEASE</version>\n    </dependency>\n    <dependency>\n      <groupId>org.springframework</groupId>\n      <artifactId>spring-context</artifactId>\n      <version>5.0.4.RELEASE</version>\n    </dependency>\n    <dependency>\n      <groupId>org.springframework</groupId>\n      <artifactId>spring-orm</artifactId>\n      <version>5.0.4.RELEASE</version>\n    </dependency>\n    <dependency>\n      <groupId>org.eclipse.persistence</groupId>\n      <artifactId>eclipselink</artifactId>\n      <version>2.5.0</version>\n    </dependency>\n    <dependency>\n      <groupId>org.hsqldb</groupId>\n      <artifactId>hsqldb</artifactId>\n      <version>2.5.0</version>\n      <scope>runtime</scope>\n    </dependency>\n  </dependencies>\n  <build>\n    <sourceDirectory>src</sourceDirectory>\n    <plugins>\n      <plugin>\n        <artifactId>maven-compiler-plugin</artifactId>\n        <version>3.8.0</version>\n        <configuration>\n          <source>1.8</source>\n          <target>1.8</target>\n        </configuration>\n      </plugin>\n    </plugins>\n  </build>\n</project>\n```\n\n**persistence.xml(Please place this in src/resources/META-INF folder)**\n\n```jsx\n\n<persistence xmlns="http://xmlns.jcp.org/xml/ns/persistence"\nxmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\nxsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence\nhttp://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd"\nversion="2.1\u2033>\n<persistence-unit name="SpringJpaEclipseLinkORM"\ntransaction-type="RESOURCE_LOCAL">\n<class>com.praveen.entity.Employee</class>\n<properties>\n<property name="javax.persistence.jdbc.url"\nvalue="jdbc:hsqldb:hsql://localhost/testdb" />\n<property name="javax.persistence.jdbc.user" value="SA" />\n<property name="javax.persistence.jdbc.password" value="" />\n<property name="javax.persistence.jdbc.driver"\nvalue="org.hsqldb.jdbc.JDBCDriver" />\n</properties>\n</persistence-unit>\n</persistence>\n\n\n```\n\n**Entity class**\n\n```jsx\n@Entity\n@Table(name = \u201cemployee\u201d)\npublic class Employee {\n@Id\nprivate int employee_Id;\nprivate String employee_Name;\nprivate String email;\nprivate Double salary;\nprivate String gender;\npublic int getEmployee_Id() {\nreturn employee_Id;\n}\npublic void setEmployee_Id(int employee_Id) {\nthis.employee_Id = employee_Id;\n}\npublic String getEmployee_Name() {\nreturn employee_Name;\n}\npublic void setEmployee_Name(String employee_Name) {\nthis.employee_Name = employee_Name;\n}\npublic String getEmail() {\nreturn email;\n}\npublic void setEmail(String email) {\nthis.email = email;\n}\npublic Double getSalary() {\nreturn salary;\n}\npublic void setSalary(Double salary) {\nthis.salary = salary;\n}\npublic String getGender() {\nreturn gender;\n}\npublic void setGender(String gender) {\nthis.gender = gender;\n}\n\n}\n\n```\n\n**DAO class**\n\n```jsx\n@Repository\npublic class EmployeeDAO {\n@PersistenceContext\nprivate EntityManager entityManager;\npublic void save(Employee employee) {\nentityManager.persist(employee);\nSystem.out.println(\u201cEmployee is created\u2026\u201d);\n}\npublic void delete(Employee employee) {\nentityManager.remove(employee);\nSystem.out.println(\u201cEmployee is deleted\u2026\u201d);\n}\npublic void update(Employee employee) {\nentityManager.merge(employee);\nSystem.out.println(\u201cEmployee is deleted\u2026\u201d);\n}\npublic Employee getEmployee(int empId) {\nreturn entityManager.find(Employee.class,empId);\n}\n}\n\n\n```\n\n**Service class**\n\n```jsx\n@Service(\u201cemployeeService\u201d)\npublic class EmployeeService {\n@Autowired\nprivate EmployeeDAO employeeDAO;\n@Transactional\npublic void save(Employee employee) {\nemployeeDAO.save(employee);\n}\npublic Employee getEmployee(int empId) {\nreturn employeeDAO.getEmployee(empId);\n}\n}\n```\n\n**Utility classes for EclipseLink**\n\n1. EntityManagerFactoryUtil.java\n\n```jsx\n@Configuration\n@ComponentScan(basePackages=\u201dcom/praveen\u201d)\n@EnableTransactionManagement\npublic class EntityManagerFactoryUtil {\n@Bean\npublic LocalEntityManagerFactoryBean entityManagerFactory() {\nLocalEntityManagerFactoryBean localEntityManagerFactoryBean = new LocalEntityManagerFactoryBean();\nlocalEntityManagerFactoryBean.setPersistenceUnitName(\u201cSpringJpaEclipseLinkORM\u201d);\nreturn localEntityManagerFactoryBean;\n}\n}\n```\n\n2. JpaTransactionManagerUtil.java\n\n```jsx\n@Configuration\npublic class JpaTransactionManagerUtil {\n@PersistenceUnit(name = \u201cSpringJpaEclipseLinkORM\u201d)\nprivate EntityManagerFactory entityManagerFactory;\n@Bean\npublic JpaTransactionManager transactionManager() {\nJpaTransactionManager jpaTransactionManager = new JpaTransactionManager();\njpaTransactionManager.setEntityManagerFactory(entityManagerFactory);\nreturn jpaTransactionManager;\n}\n}\n```\n\n**Test class**\n\n```jsx\npublic class EmployeeTest {\npublic static void main(String[] args) {\nAnnotationConfigApplicationContext container = new AnnotationConfigApplicationContext(\n\u201ccom.praveen\u201d);\nEmployeeService employeeService = container.getBean(\u201cemployeeService\u201d,EmployeeService.class);\ncreateEmployee(employeeService);\ngetEmployee(employeeService);\ncontainer.close();\n}\nprivate static void createEmployee(EmployeeService employeeService) {\nEmployee employee = new Employee();\nemployee.setEmail(\u201cmnp3pk1@gmail.com.com\u201d);\nemployee.setEmployee_Name(\u201cPraveen\u201d);\nemployee.setGender(\u201cMale\u201d);\nemployee.setSalary(190000.00);\nemployeeService.save(employee);\n}\nprivate static void getEmployee(EmployeeService employeeService) {\nEmployee employee = employeeService.getEmployee(0);\nSystem.out.println(employee.getEmployee_Id() + \u201c\t\u201d + employee.getEmployee_Name() + \u201c\t\u201d + employee.getEmail()\n+ \u201c\t\u201d + employee.getGender() + \u201c\t\u201d + employee.getSalary());\n}\n}\n\n```\n\n**Output**\n\n```jsx\nAug 10, 2019 10:46:11 AM org.springframework.context.annotation.AnnotationConfigApplicationContext prepareRefresh\nINFO: Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1ed6993a: startup date [Sat Aug 10 10:46:11 IST 2019]; root of context hierarchy\nAug 10, 2019 10:46:11 AM org.springframework.orm.jpa.LocalEntityManagerFactoryBean createNativeEntityManagerFactory\nINFO: Building JPA EntityManagerFactory for persistence unit \u2018SpringJpaEclipseLinkORM\u2019\nAug 10, 2019 10:46:12 AM org.springframework.orm.jpa.LocalEntityManagerFactoryBean buildNativeEntityManagerFactory\nINFO: Initialized JPA EntityManagerFactory for persistence unit \u2018SpringJpaEclipseLinkORM\u2019\n[EL Info]: 2019-08-10 10:46:13.26\u2013ServerSession(817686795)\u2013EclipseLink, version: Eclipse Persistence Services \u2013 2.5.0.v20130507-3faac2b\n[EL Info]: connection: 2019-08-10 10:46:13.769\u2013ServerSession(817686795)\u2013file:/D:/Praveen/Projects/workspace/PraveenSpringORMUsingEclipseLinkProject/target/classes/_SpringJpaEclipseLinkORM login successful\nEmployee is created\u2026\n0 Praveen mnp3pk1@gmail.com.com Male 190000.0\nAug 10, 2019 10:46:13 AM org.springframework.context.annotation.AnnotationConfigApplicationContext doClose\nINFO: Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@1ed6993a: startup date [Sat Aug 10 10:46:11 IST 2019]; root of context hierarchy\nAug 10, 2019 10:46:13 AM org.springframework.orm.jpa.LocalEntityManagerFactoryBean destroy\nINFO: Closing JPA EntityManagerFactory for persistence unit \u2018SpringJpaEclipseLinkORM\u2019\n[EL Info]: connection: 2019-08-10 10:46:13.966\u2013ServerSession(817686795)\u2013file:/D:/Praveen/Projects/workspace/PraveenSpringORMUsingEclipseLinkProject/target/classes/_SpringJpaEclipseLinkORM logout successful\n\n\n```\n\n\n '}}]);