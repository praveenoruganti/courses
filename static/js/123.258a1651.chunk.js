(this["webpackJsonppraveenoruganti-courses"]=this["webpackJsonppraveenoruganti-courses"]||[]).push([[123],{692:function(t,n,i){"use strict";i.r(n),n.default=' String Joiner is being used for joining the strings with the use of delimiter, prefix and postfix.\n\nString Joiner is very useful when you need to join strings in a parallel stream.\n\n```jsx\npackage com.praveen.others;\n\nimport java.util.Arrays;\nimport java.util.List;\nimport java.util.StringJoiner;\nimport java.util.stream.Collectors;\n\nimport lombok.AllArgsConstructor;\nimport lombok.Data;\nimport lombok.ToString;\nimport lombok.experimental.SuperBuilder;\n\n@AllArgsConstructor\n@Data\n@SuperBuilder\n@ToString\nclass Game {\n\tprivate final String name;\n\tprivate final int ranking;\n\n}\n\npublic class StringJoinExample {\n\n\tpublic static void main(String args[]) {\n\t\t// Join String by a delimiter\n\t\tStringJoiner sj = new StringJoiner(",");\n\t\tsj.add("aaa");\n\t\tsj.add("bbb");\n\t\tsj.add("ccc");\n\t\tSystem.out.println(sj);\n\t\t// Join String by a delimiter and starting with a supplied prefix and ending\n\t\t// with a supplied suffix.\n\t\tStringJoiner sj1 = new StringJoiner("/", "[", "]");\n\t\tsj1.add("2016");\n\t\tsj1.add("02");\n\t\tsj1.add("26");\n\t\tSystem.out.println(sj1);\n\t\t// StringJoiner is used internally by static String.join().\n\t\t// Join String by a delimiter.\n\t\tSystem.out.println(String.join("-", "2015", "10", "31"));\n\t\t// Join a List by a delimiter.\n\n\t\tList<String> list = Arrays.asList("java", "python", "nodejs", "ruby");\n\t\t// java, python, nodejs, ruby\n\t\tSystem.out.println(String.join(": ", list));\n\n\t\t// Collectors.joining\n\t\t// Join List<String> example.\n\n\t\t// java | python | nodejs | ruby\n\t\tSystem.out.println(list.stream().map(x -> x).collect(Collectors.joining(" | ")));\n\n\t\t// Join List<Object> example\n\n\t\tList<Game> listGame = Arrays.asList(new Game("Dragon Blaze", 5), new Game("Angry Bird", 5),\n\t\t\t\tnew Game("Candy Crush", 5));\n\n\t\t// {Dragon Blaze, Angry Bird, Candy Crush}\n\t\tSystem.out.println(listGame.stream().map(Game::getName).collect(Collectors.joining(", ", "{", "}")));\n\n\t}\n\n}\n```\n\n '}}]);