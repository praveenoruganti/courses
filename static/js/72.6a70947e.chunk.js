(this["webpackJsonppraveenoruganti-courses"]=this["webpackJsonppraveenoruganti-courses"]||[]).push([[72],{641:function(e,a,n){"use strict";n.r(a),a.default=" Hash Table is a data structure that provides fast insertion, deletion, and lookup of key/value pairs.\n\nUnder the hood, a hash table uses a dynamic array of linked lists to efficiently store key/value pairs. When inserting a key/value pair, a hash function first maps the key, which is typically a string(or any data that can be hashed, depending on the implementation of hash table), to an intger value and, by extension, to an index in the underlying dynamic array. Then, the value associated with the key is added to the linked list stored at that index in the dynamic array, and a reference to the key is also stored with the value.\n\nHash tables rely on highly optimized hash functions to minimize the number of collisions that occur when storing the values: cases where two keys map to the same index.\n\nBelow is an example how hash table looks like under the hood:\n\n```jsx\n[\n    0: (value1, key1) -> null\n    1: (value2, key2) -> (value3, key3) -> (value4, key4)\n    2: (value5, key5) -> null\n    3: (value6, key6) -> null\n    4: null\n    5: (value7, key7) -> (value8, key8)\n    6: (value9, key9) -> null\n]\n```\n\nIn the hash table above, the keys key2, key3, key4 collided by all being hashed to 1, and the keys key7, key8 collided both being hashed to 5.\n\n**Hash Table Operations**\n\n- Inserting a key/value pair: O(1) on average; O(n) in the  worst case.\n- Removing a key/value pair: O(1) on average; O(n) in the  worst case.\n- Looking up a key: O(1) on average; O(n) in the  worst case.\n\nThe worst case linear-time operations occur when a hash table experiences a lot of collisions, leading to long linked lists internally, which take O(n) time to traverse.\n\nHowever in practice, we typically assume that the hash functions employed by hash tables are so optimized that collisions are extremely rare and constant time operations are all but guaranteed.\n\n "}}]);