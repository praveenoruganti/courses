(this["webpackJsonppraveenoruganti-courses"]=this["webpackJsonppraveenoruganti-courses"]||[]).push([[274],{843:function(e,t,n){"use strict";n.r(t),t.default=" ![screenshot of the app](https://praveenoruganti.github.io/courses/images/testing/junit5.jpg)\n\nJunit 5 Architecture has three main components:\n\n**Junit Platform**\n\nIt provides a core foundation to help launching testing frameworks on JVM. It acts as an interface between JUnit and its clients such as build tools (`Maven and Gradle`) and IDE's (`Eclipse and IntelliJ`). It introduces the concept of a `Launcher` which external tools use to discover, filter, and execute tests. It also provides the TestEngine API for developing a testing framework that runs on the JUnit platform. Using TestEngine API , 3rd party testing libraries such as Spock, Cucumber, and FitNesse can directly plug in and provide their custom TestEngine.\n\n**Junit Jupiter**\n\nIt provides a new programming model and extension model for writing tests and extensions in Junit 5. It has a whole new annotation to write test cases in Junit 5. Some of the annotations are `@BeforeEach`, `@AfterEach`, `@AfterAll`, `@BeforeAll` etc. It implements TestEngine API provided by Junit Platform so that Junit 5 test can be run.\n\n**Junit Vintage**\n\nThe term `Vintage` basically means **classic**. Thus, this sub-project provides extensive support for writing test cases in JUnit 4 and JUnit 3. Thus, backward compatibility is been provided by this project. "}}]);