(this["webpackJsonppraveenoruganti-courses"]=this["webpackJsonppraveenoruganti-courses"]||[]).push([[169],{738:function(n,i,e){"use strict";e.r(i),i.default=" Spring Cloud Config handles the management of application configuration data through a centralized service so your application configuration data (particularly your environment specific configuration data) is cleanly separated from your deployed microservice. This ensures that no matter how many microservice instances you bring up, they\u2019ll always have the same configuration. Spring Cloud Config has its own property management repository, but also integrates with open source projects such as Git.\n\n![screenshot of the app](https://praveenoruganti.github.io/courses/images/microservice/configuration.jpg)\n\n![screenshot of the app](https://praveenoruganti.github.io/courses/images/microservice/configuration1.jpg)\n\n\nInstead of having properties or yml in each springboot application jar, it will be good if we have remote configurations for our applications and then spring boot application access those.\n\n**Local Environment Configuration**\n\nCreate a springboot application with application name praveenoruganti-spring-cloud-config-server\n\nAdd below dependency in pom.xml\n\n```jsx\n\n<dependency>\n    <groupId>org.springframework.cloud</groupId>\n    <artifactId>spring-cloud-config-server</artifactId>\n</dependency>\n\n```\n\nInclude @EnableConfigServer on top of main class.\n\n```jsx\n@EnableConfigServer\n@SpringBootApplication\npublic class SpringCloudConfigServerApplication {\n\n\tpublic static void main(String[] args) {\n\t\tSpringApplication.run(SpringCloudConfigServerApplication.class);\n\t}\n\n}\n```\nInclude the below GIT path where the application properties are placed in application.yml\n\n```jsx\nspring:\n application: \n  name: praveenoruganti-spring-cloud-config-server\n\n cloud:\n   config:\n     server:\n       git:\n        uri: https://github.com/orugantipraveen/Configuration\n        searchPaths: CONFIG_DEV\nserver:\n port: 8888\n\n```\n\n\n\n\n "}}]);