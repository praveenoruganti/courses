(this["webpackJsonppraveenoruganti-courses"]=this["webpackJsonppraveenoruganti-courses"]||[]).push([[225],{794:function(e,n,t){"use strict";t.r(n),n.default=' We can schedule the batch in SpringBoot using below ways.\n\n1. SpringBoot Batch Scheduler.\n2. Shedlock\n\n## SpringBoot Batch Scheduler\n\nLets checkout how to create an app using SpringBoot Batch Scheduler.\n\n**Add the batch dependency in pom.xml**\n\n```jsx\n<dependency>\n  <groupId>org.springframework.boot</groupId>\n  <artifactId>spring-boot-starter-batch</artifactId>\n</dependency>\n```\n\n**Cron expression**\n\nCron expression is represented by six fields:\n\nsecond, minute, hour, day of month, month, day(s) of week\n\n![screenshot of the app](https://praveenoruganti.github.io/courses/images/springboot/Batch.PNG)\n\nFrom the above cron expression, we give you some example patterns:\n\n```jsx\n"0 0 * * * *" = the top of every hour of every day.\n"*/10 * * * * *" = every ten seconds.\n"0 0 8-10 * * *" = 8, 9 and 10 o\'clock of every day.\n"0 0 8,10 * * *" = 8 and 10 o\'clock of every day.\n"0 0/30 8-10 * * *" = 8:00, 8:30, 9:00, 9:30 and 10 o\'clock every day.\n"0 0 9-17 * * MON-FRI" = on the hour nine-to-five weekdays.\n"0 0 0 25 12 ?" = every Christmas Day at midnight.\n```\n\n**Configure batch job scheduler with spring boot**\n\nConfiguring batch job scheduler very easy with spring boot, we just do two steps:\n\n1. Enable scheduling with @EnableScheduling annotation.\n2. Create a method annotated with @Scheduled and a cron job pattern.\n\nLets see the code implementation\n\n**BatchSchedulerApplication**\n\n```jsx\n\n@SpringBootApplication\n@EnableScheduling\npublic class BatchSchedulerApplication {\n\n\tpublic static void main(String[] args) {\n\t\tSpringApplication.run(BatchSchedulerApplication.class);\n\t}\n}\n```\n\n**BatchScheduler**\n\n```jsx\n\n@Component\n@Slf4j\npublic class BatchScheduler {\n\n\tprivate Environment env;\n\n\tpublic BatchScheduler(Environment env) {\n\t\tthis.env = env;\n\t}\n\n\t@Scheduled(cron = "app.scheduler.configCornJob", zone = "app.scheduler.timezone")\n\tpublic void quoteGeneratorScheduler() {\n\t\tlog.info("quoteGeneratorScheduler Starts");\n\t\tString runnableEnv = env.getProperty("app.scheduler.runnableEnvironment");\n\t\tString randomQuote = Constants.quotes[(int) (Math.random() * Constants.quotes.length)];\n\t\tif (runnableEnv.equalsIgnoreCase("dev")) {\n\t\t\tSystem.out.println(randomQuote);\n\t\t}\n\t\tlog.info("quoteGeneratorScheduler Ends");\n\t}\n}\n\n\n```\n\n**Constants**\n\n```jsx\npublic class Constants {\n\n\tpublic static final String[] quotes = new String[] { "You will face many defeats in life, but never let yourself be defeated.",\n\t\t\t"The greatest glory in living lies not in never falling, but in rising every time we fall.",\n\t\t\t"In the end, it\'s not the years in your life that count" };\n\n}\n\n```\n\n**application.yml**\n\n```jsx\napp:\n scheduler:\n   configCornJob: 0 0/1 * * * ?\n   runnableEnvironment: dev\n   timezone: IST\n```\n\nIf you see the above implementation, We have created quote generated scheduler which runs every 1 minute.\n\nLets see the Logs now.\n\n```jsx\n{"@timestamp":"2020-11-08T00:23:00.016+05:30","severity":"INFO","service":"praveenoruganti-springboot-batch-scheduler","trace":"","span":"","parent":"","exportable":"","thread":"scheduling-1","class":"c.praveen.batch.scheduler.BatchScheduler","methodName":"quoteGeneratorScheduler","lineNo":"24","message":"quoteGeneratorScheduler Starts","stacktrace":""}\nYou will face many defeats in life, but never let yourself be defeated.\n{"@timestamp":"2020-11-08T00:23:00.016+05:30","severity":"INFO","service":"praveenoruganti-springboot-batch-scheduler","trace":"","span":"","parent":"","exportable":"","thread":"scheduling-1","class":"c.praveen.batch.scheduler.BatchScheduler","methodName":"quoteGeneratorScheduler","lineNo":"35","message":"quoteGeneratorScheduler Ends","stacktrace":""}\n{"@timestamp":"2020-11-08T00:24:00.010+05:30","severity":"INFO","service":"praveenoruganti-springboot-batch-scheduler","trace":"","span":"","parent":"","exportable":"","thread":"scheduling-1","class":"c.praveen.batch.scheduler.BatchScheduler","methodName":"quoteGeneratorScheduler","lineNo":"24","message":"quoteGeneratorScheduler Starts","stacktrace":""}\nThe greatest glory in living lies not in never falling, but in rising every time we fall.\n{"@timestamp":"2020-11-08T00:24:00.010+05:30","severity":"INFO","service":"praveenoruganti-springboot-batch-scheduler","trace":"","span":"","parent":"","exportable":"","thread":"scheduling-1","class":"c.praveen.batch.scheduler.BatchScheduler","methodName":"quoteGeneratorScheduler","lineNo":"35","message":"quoteGeneratorScheduler Ends","stacktrace":""}\n\n```\n\n**Drawbacks of SpringBoot Batch Scheduler**\nWe need to create seperate app for batch scheduler as it needs to run in single instance which is a drawback in terms of maintenance which can be eliminated by using Shedlock.\n\n## Shedlock with MySQL\n\nLets see how to use Shedlock which provides a distributed lock mechanism for cron jobs. Well for this we also need to have a database or redis so I will use MySQL in this example to run locally.\n\n```jsx\n\n<dependency>\n\t<groupId>net.javacrumbs.shedlock</groupId>\n\t<artifactId>shedlock-spring</artifactId>\n\t<version>4.15.1</version>\n</dependency>\n<dependency>\n\t<groupId>net.javacrumbs.shedlock</groupId>\n\t<artifactId>shedlock-provider-jdbc-template</artifactId>\n\t<version>4.15.1</version>\n</dependency>\n\n```\n\n**Enabling Shedlock**\n\nFirst step is creating a table for locks to be used by Shedlock.\n\n```jsx\n\nCREATE TABLE shedlock(\n    name VARCHAR(64),\n    lock_until TIMESTAMP(3) NULL,\n    locked_at TIMESTAMP(3) NULL,\n    locked_by  VARCHAR(255),\n    PRIMARY KEY (name)\n)\n\n```\n\nLater on, we have to add one annotation and a bean producer for LockProvider for enabling Shedlock. So, our Application class will look like.\n\n**ShedlockJobHandler**\n\n```jsx\n@Component\n@Slf4j\n@EnableScheduling\n@EnableSchedulerLock(defaultLockAtMostFor = "app.shedlock.defaultLockAtMostFor")\npublic class ShedlockJobHandler {\n\n\t@Bean\n\tpublic LockProvider lockProvider(DataSource dataSource) {\n\t    return new JdbcTemplateLockProvider(dataSource);\n\t}\n}\n```\n\n- EnableSchedulerLock annotation enables Shedlock in Spring context so that we can use it for our jobs. defaultLockAtMostFor attribute is required but it can be overridden by individual tasks.\n- We need to create a Bean for LockProvider which will be used by Shedlock to update lock table we created.\n\n**Running a Job with Shedlock**\n\nAll jobs which need distributed lock should be annotated with @SchedulerLock annotation, otherwise, jobs will run in parallel. There are three main parameters to configure.\n\n- name - Every job has to have a unique name. Remember that name field from shedlock table was the primary key\n- lockAtLeastFor - This attribute is for ensuring the current job will hold the lock at least given amount of time. For example; if we configure it to 20 seconds then the lock won\u2019t released even though job finished before 20 seconds.\n- lockAtMostFor - This attribute is for making sure lock is released in case of executing instance dies. As it is suggested from the documentation itself it will be better to set this attribute larger than the maximum estimated execution time. If a task takes longer than this value than an unexpected behaviour might happen because some other instance will also run the same job since lock will be released.\n\nI will create a job called QuoteGeneratorJob with lockAtLeastFor attribute set to 15 seconds and lockAtMostFor attribute set to 20 seconds. The actual time it will take to run will be just 5 seconds and it will run at every minute.\n\n**ShedlockJobHandler**\n\n```jsx\n@Component\n@Slf4j\n@EnableScheduling\n@EnableSchedulerLock(defaultLockAtMostFor = "app.shedlock.defaultLockAtMostFor")\npublic class ShedlockJobHandler {\n\n\tprivate Environment env;\n\n\tpublic ShedlockJobHandler(Environment env) {\n\t\tthis.env = env;\n\t}\n\n\t@Scheduled(cron = "app.shedlock.scheduler.configCornJob", zone = "app.shedlock.scheduler.timezone")\n\t@SchedulerLock(name = "app.shedlock.name", lockAtLeastFor = "app.shedlock.lockAtLeastFor", lockAtMostFor = "app.shedlock.lockAtMostFor")\n\tpublic void quoteGeneratorJob() throws InterruptedException {\n\t\tlog.info("quoteGeneratorJob Starts");\n\t\tString runnableEnv = env.getProperty("app.shedlock.scheduler.runnableEnvironment");\n\t\tString randomQuote = Constants.quotes[(int) (Math.random() * Constants.quotes.length)];\n\t\tif (runnableEnv.equalsIgnoreCase("dev")) {\n\t\t\tSystem.out.println(randomQuote);\n\t\t}\n\t\tlog.info("quoteGeneratorJob Ends");\n\t}\n\n\t@Bean\n\tpublic LockProvider lockProvider(DataSource dataSource) {\n\t    return new JdbcTemplateLockProvider(dataSource);\n\t}\n}\n\n```\n\n**Constants**\n\n```jsx\npublic class Constants {\n\tpublic static final String[] quotes = new String[] {\n\t\t\t"You will face many defeats in life, but never let yourself be defeated.",\n\t\t\t"The greatest glory in living lies not in never falling, but in rising every time we fall.",\n\t\t\t"In the end, it\'s not the years in your life that count" };\n}\n```\n\n**application.yml**\n\n```jsx\nserver:\n  port: 8080\nspring:\n  application:\n    name: praveenoruganti-springboot-shedlock\n  jpa:\n  database: MYSQL\n  show-sql: true\n  generate-ddl: false\n\n  datasource:\n    type: com.zaxxer.hikari.HikariDataSource\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://root:password@localhost:3306/praveendb?reconnect=true\n    username: root\n    password: password\n    hikari:\n      connectionTimeout : 30000\n      idleTimeout : 600000\n      maxLifetime : 1800000\n      maximumPoolSize : 5\nmanagement:\n  endpoints:\n   enable-by-default: false\n   web:\n     base-path: /\n     exposure:\n       include: info,refresh,logger\n  endpoint:\n    info:\n      enabled: true\n    refresh:\n      enabled: true\n    loggers:\n      enabled: true\napidocs:\n  info:\n   description: |\n\n       Praveen Oruganti SpringBoot Shedlock\n\n   version: \'1.0\'\n   title: Praveen Oruganti SpringBoot Shedlock\n   termsOfService: \'urn:tos\'\n   contact:\n     name: Praveen Oruganti\n     url: https://praveenoruganti.github.io\n     email: praveenoruganti@gmail.com\n\napp:\n disable:\n  tryOutOption:false\n serviceName: Praveen Oruganti SpringBoot Shedlock\n shedlock:\n   name: QuoteGeneratorJob\n   defaultLockAtMostFor: 30s\n   lockAtLeastFor: 15s\n   lockAtMostFor: 20s\n   scheduler:\n     configCornJob: 0 0/1 * * * ?\n     runnableEnvironment: dev\n     timezone: IST\n```\n\n**Here with the application logs**\n\n```jsx\n"@timestamp":"2020-11-08T01:03:00.455+05:30","severity":"INFO","service":"praveenoruganti-springboot-shedlock","trace":"","span":"","parent":"","exportable":"","thread":"scheduling-1","class":"c.p.shedlock.handler.ShedlockJobHandler","methodName":"quoteGeneratorJob","lineNo":"29","message":"quoteGeneratorJob Starts","stacktrace":""}\nYou will face many defeats in life, but never let yourself be defeated.\n{"@timestamp":"2020-11-08T01:03:00.459+05:30","severity":"INFO","service":"praveenoruganti-springboot-shedlock","trace":"","span":"","parent":"","exportable":"","thread":"scheduling-1","class":"c.p.shedlock.handler.ShedlockJobHandler","methodName":"quoteGeneratorJob","lineNo":"35","message":"quoteGeneratorJob Ends","stacktrace":""}\n{"@timestamp":"2020-11-08T01:04:00.126+05:30","severity":"INFO","service":"praveenoruganti-springboot-shedlock","trace":"","span":"","parent":"","exportable":"","thread":"scheduling-1","class":"c.p.shedlock.handler.ShedlockJobHandler","methodName":"quoteGeneratorJob","lineNo":"29","message":"quoteGeneratorJob Starts","stacktrace":""}\nIn the end, it\'s not the years in your life that count\n{"@timestamp":"2020-11-08T01:04:00.127+05:30","severity":"INFO","service":"praveenoruganti-springboot-shedlock","trace":"","span":"","parent":"","exportable":"","thread":"scheduling-1","class":"c.p.shedlock.handler.ShedlockJobHandler","methodName":"quoteGeneratorJob","lineNo":"35","message":"quoteGeneratorJob Ends","stacktrace":""}\n{"@timestamp":"2020-11-08T01:05:00.155+05:30","severity":"INFO","service":"praveenoruganti-springboot-shedlock","trace":"","span":"","parent":"","exportable":"","thread":"scheduling-1","class":"c.p.shedlock.handler.ShedlockJobHandler","methodName":"quoteGeneratorJob","lineNo":"29","message":"quoteGeneratorJob Starts","stacktrace":""}\nThe greatest glory in living lies not in never falling, but in rising every time we fall.\n{"@timestamp":"2020-11-08T01:05:00.157+05:30","severity":"INFO","service":"praveenoruganti-springboot-shedlock","trace":"","span":"","parent":"","exportable":"","thread":"scheduling-1","class":"c.p.shedlock.handler.ShedlockJobHandler","methodName":"quoteGeneratorJob","lineNo":"35","message":"quoteGeneratorJob Ends","stacktrace":""}\n\n```\n\nIf you see the table only one instance will hold the lock.\n\n![screenshot of the app](https://praveenoruganti.github.io/courses/images/springboot/shedlock.PNG)\n\n## Shedlock with Redis\n\nWe have seen Shedlock with MySQL before but we can also use Redis for Shedlock.\n\nBelow changes we need to do to achieve this\n\n1. pom.xml\n\n```jsx\n<dependency>\n  <groupId>org.springframework.boot</groupId>\n  <artifactId>spring-boot-starter-data-redis</artifactId>\n</dependency>\n<dependency>\n  <groupId>net.javacrumbs.shedlock</groupId>\n  <artifactId>shedlock-spring</artifactId>\n  <version>4.29.0</version>\n</dependency>\n  <dependency>\n  <groupId>net.javacrumbs.shedlock</groupId>\n  <artifactId>shedlock-provider-redis-spring</artifactId>\n  <version>4.29.0</version>\n</dependency>\n```\n\n2. Include the redis lock provider bean\n\n```jsx\n@Bean\npublic LockProvider lockProvider(RedisTemplate<String, String> redisTemplate) {\n  return new RedisLockProvider(redisTemplate.getConnectionFactory());\n}\n```\n\n3. application.yml\n\n```jsx\nspring:\n application:\n  name: praveenoruganti-springboot-shedlock\n redis:\n  host: redis-19158.c212.ap-south-1-1.ec2.cloud.redislabs.com\n  port: 19158\n  password: flyL2EpWKG4YuFehTzzzg8VnnKzmUOjC\n datasource:\n     url: jdbc:mysql://root:password-1@localhost:3306/praveenorugantitech?reconnect=true \n     driverClassName: com.mysql.cj.jdbc.Driver \n     \n jpa:\n    hibernate:\n     ddl-auto: update \n\n \n  \nspringdoc:\n   use-fqn: true\n   swagger-ui:\n    doc-expansion: none\n    operationsSorter: method\n#   supportedSubmitMethods: []\n\n\napp:\n openApiTitle: SpringBoot Shedlock\n openApiDescription: |\n   \n       SpringBoot Shedlock\n shedlock: \n   name: QuoteGeneratorJob\n   defaultLockAtMostFor: 30s\n   lockAtLeastFor: 15s\n   lockAtMostFor: 20s\n   scheduler:\n     configCornJob: 0 0/1 * * * ?\n     runnableEnvironment: dev\n     timezone: IST\n```\n\n**Here with the application logs**\n\n```jsx\n{"@timestamp":"2020-11-08T01:29:00.883+05:30","severity":"INFO","service":"praveenoruganti-springboot-shedlock","thread":"scheduling-1","class":"c.p.shedlock.handler.ShedlockJobHandler","methodName":"quoteGeneratorJob","lineNo":"33","message":"quoteGeneratorJob Starts","stacktrace":"","traceId":"d2724292fe8256c7","spanId":"d2724292fe8256c7"}\nThe greatest glory in living lies not in never falling, but in rising every time we fall.\n{"@timestamp":"2020-11-08T01:29:00.883+05:30","severity":"INFO","service":"praveenoruganti-springboot-shedlock","thread":"scheduling-1","class":"c.p.shedlock.handler.ShedlockJobHandler","methodName":"quoteGeneratorJob","lineNo":"39","message":"quoteGeneratorJob Ends","stacktrace":"","traceId":"d2724292fe8256c7","spanId":"d2724292fe8256c7"}\n{"@timestamp":"2020-11-08T01:30:00.081+05:30","severity":"INFO","service":"praveenoruganti-springboot-shedlock","thread":"scheduling-1","class":"c.p.shedlock.handler.ShedlockJobHandler","methodName":"quoteGeneratorJob","lineNo":"33","message":"quoteGeneratorJob Starts","stacktrace":"","traceId":"71466c57c961c376","spanId":"71466c57c961c376"}\nIn the end, it\'s not the years in your life that count\n{"@timestamp":"2020-11-08T01:30:00.082+05:30","severity":"INFO","service":"praveenoruganti-springboot-shedlock","thread":"scheduling-1","class":"c.p.shedlock.handler.ShedlockJobHandler","methodName":"quoteGeneratorJob","lineNo":"39","message":"quoteGeneratorJob Ends","stacktrace":"","traceId":"71466c57c961c376","spanId":"71466c57c961c376"}\n\n\n```\n '}}]);