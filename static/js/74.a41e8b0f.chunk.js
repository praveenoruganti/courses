(this["webpackJsonppraveenoruganti-courses"]=this["webpackJsonppraveenoruganti-courses"]||[]).push([[74],{643:function(e,t,n){"use strict";n.r(t),t.default=" A tree is a nonlinear hierarchical data structure that consists of nodes connected by edges.\n\n![screenshot of the app](https://praveenoruganti.github.io/courses/images/dsa/tree.jpg)\n\n**Why Tree Data Structure?**\n\nOther data structures such as arrays, linked list, stack, and queue are linear data structures that store data sequentially. In order to perform any operation in a linear data structure, the time complexity increases with the increase in the data size. But, it is not acceptable in today's computational world.\n\nDifferent tree data structures allow quicker and easier access to the data as it is a non-linear data structure.\n\n**Tree Terminologies**\n\n**Node**\n\nA node is an entity that contains a key or value and pointers to its child nodes.\n\nThe last nodes of each path are called leaf nodes or external nodes that do not contain a link/pointer to child nodes.\n\nThe node having at least a child node is called an internal node.\n\n**Edge**\n\nIt is the link between any two nodes.\n\n![screenshot of the app](https://praveenoruganti.github.io/courses/images/dsa/tree1.jpg)\n\n**Root**\n\nIt is the topmost node of a tree.\n\n**Height of a Node**\n\nThe height of a node is the number of edges from the node to the deepest leaf (ie. the longest path from the node to a leaf node).\n\n**Depth of a Node**\n\nThe depth of a node is the number of edges from the root to the node.\n\n**Height of a Tree**\n\nThe height of a Tree is the height of the root node or the depth of the deepest node.\n\n![screenshot of the app](https://praveenoruganti.github.io/courses/images/dsa/tree2.jpg)\n\n**Degree of a Node**\n\nThe degree of a node is the total number of branches of that node.\n\n**Forest**\n\nA collection of disjoint trees is called a forest.\n\n![screenshot of the app](https://praveenoruganti.github.io/courses/images/dsa/tree3.jpg)\n\n "}}]);