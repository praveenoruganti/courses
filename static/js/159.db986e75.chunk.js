(this["webpackJsonppraveenoruganti-courses"]=this["webpackJsonppraveenoruganti-courses"]||[]).push([[159],{728:function(e,t,n){"use strict";n.r(t),t.default=" In JSP, java code can be written inside the jsp page using the scriptlet tag. JSP Scripting element are written inside <% %> tags. These code inside <% %> tags are processed by the JSP engine during translation of the JSP page.\n\nJsp scripting elements are classified into two types are\n- Language Based Scripting Element\n- Advance Scripting Elements (Expression Language)\n\n`Language Based Scripting Element`\n\nThese are used to defined script in jsp page, this is traditional approach to define the script in jsp page.\n\nLanguage Based Scripting Element are classified into 4 types, they are\n- Comment Tag\n- Declaration Tag\n- Expression Tag\n- Scriptlet Tag\n\n![screenshot of the app](https://praveenoruganti.github.io/courses/images/jsp/scriptingelement.jpg)\n\n`JSP Declaration Tag`\n\nThis is used to declare variable and methods in jsp page will be translate and define as class scope declaration in .java file.\n\nThe variable and methods will become global to that jsp. It means in that jsp we can use those variables anywhere and we can call those method anywhere.\n\nAt the time of translation container inserts the declaration tag into the class. So the variables become instants variables and methods will become instants methods.\n\nThe code written inside the jsp declaration tag is placed outside the service() method of auto-generated Servlet, so it does not get memory at each request.\n\n**Syntax:** <%! variable declaration or method declaration %>\n\n`JSP Expression Tag`\n\nExpression tag is used, to find the result of the given expression and send that result back to the client browser. In other words; These are used to show or express the result or response on browser. We can use this as a display result of variable and invoking method.\n\nEach Expression tag of jsp will be internally converted into out.print() statement. In jsp out is an implicit object.\n\nThe expression tags are converted into out.print() statement and insert into the _jspService(-,-) of the servlet class by the container.\n\nThe expression tags written in a jsp are executed for each request, because _jspService(-,-) is called for each request.\n\nOne expression tag should contains one java expression only. In a jsp we can use expression tag for any number of times.\n\n**Syntax:** <%= expression %>\n\nExpression does not need any semicolon (;) by default it places under jsp service() method scope.\n\n**Note:** In jsp, the implicit object are allowed into the tags, which are inserted into _jspService(-,-). An expression tag goes to _jspService(-,-) only. So implicit object are allowed in the expression tag.\n\n`JSP Scriptlet Tag`\n\nIt use to define or insert java code in a jsp. Every java statement should followed by semicolon (;). It will be place into jspService() method.\n\nThe scriptlet tags goes to _jspService(-,-), during translation. It means scriptlet tags are executed for each request. Because _jspService(-,-) is called for each request.\n\nWe can use implicit object of jsp in a scriptlet tag also because scriptlet tag goes to _jspService(-,-) only.\n\nIn a jsp implicit object are allowed in expression tags and scriptlet tags but not in the declaration tags.\n\n**Syntax:** <% java code %>\n\n`Difference between the jsp scriptlet tag and jsp declaration tag?`\n\n![screenshot of the app](https://praveenoruganti.github.io/courses/images/jsp/jspscripletvsjspdeclaration.jpg)\n\n\n "}}]);