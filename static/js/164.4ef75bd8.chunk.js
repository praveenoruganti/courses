(this["webpackJsonppraveenoruganti-courses"]=this["webpackJsonppraveenoruganti-courses"]||[]).push([[164],{733:function(e,n,t){"use strict";t.r(n),n.default=' Action elements are used to performs specific operation using JSP container, like setting values into java class, getting values from java class.\n\nThe JSP action elements classified into two types are\n- JSP Standard Action Element\n- JSP Custom Action Element\n\n**Standard Action Element**\n\nStandard Action are given in JSP to separate the presentation logic and the business logic of the JSP but partial.\n\nThe name is given as a standard Action, because each action as a pre-defined meaning and as a programmer it is not possible to change the meaning of the tag.\n\nEach Standard Action follows xml syntax, we do not have any equivalent html syntax.\n\nThe standard action element followed by "JSP" prifix.\n\n`Syntax of Standard Action Element`\n```jsx\n<jsp: standard action name>\n```\n\nStandard Action are given by JSP are\n- <jsp: include>\n- <jsp: forward>\n- <jsp: param>\n- <jsp: params>\n- <jsp: plugin>\n- <jsp: useBean>\n- <jsp: setProperty>\n- <jsp: getProperty>\n- <jsp: fallback>\n\n`Jsp Forward`\n\nThis action tag is used for forwarding a request from a jsp to another jsp or a servlet or a html.\n\n`When use JSP Forward tag`\n\nGenerally, if a huge logic is required in a jsp then we divide that logic into multiple jsp pages and then we apply forwarding technique.\n\n**Note**: If destination is a jsp or html then file name is required and if destination is a servlet then url pattern is required.\n\n`Save and Compile jsp program`\n\nJSP program must be save with the .jsp extension. And for compile jsp code simply follow step of compilation servlet code.\n\nFor example\n\n`forward.jsp`\n\n```jsx\n<%@ page language="java" contentType="text/html; charset=ISO-8859-1"\n    pageEncoding="ISO-8859-1"%>\n<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">\n<html>\n<head>\n<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">\n<title>Forward JSP</title>\n</head>\n<body>\n<%-- <jsp:forward page="/welcome"/>\n<jsp:forward page="division.html"/>\n<jsp:forward page="taglib.jsp"/> --%>\n<jsp:forward page="home.jsp">\n<jsp:param name="name" value="Praveen"/>\n<jsp:param name="age" value="32"/>\n</jsp:forward>\n</body>\n</html>\n```\n\n`home.jsp`\n\n```jsx\n<%@ page language="java" contentType="text/html; charset=ISO-8859-1"\n    pageEncoding="ISO-8859-1"%>\n<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">\n<html>\n<head>\n<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">\n<title>Home Page</title>\n</head>\n<body>\nMy name is: <%=request.getParameter("name") %><br>\nAge is: <%=request.getParameter("age") %><br>\n</body>\n</html>\n```\n\n`Jsp Include`\n\nThis action tag is used for including the response of one resource like a jsp or a servlet or a html into another jsp page.\n\nIn jsp, we have two types of including,\n\n- include directive\n- include action\n\n`Main difference between include directive and include action`\n\nInclude directive is for static including and include action is for dynamic including.\n\nInternally a container uses RequestDispatcher\'s include method, for executing tag.\n\n![screenshot of the app](https://praveenoruganti.github.io/courses/images/jsp/jspinclude.jpg)\n\n\n`When use JSP Include Directive`\n\nWe choose include directive when a destination is a static page like html and we choose include action, when a destination is a dynamic resource like a jsp or a servlet.\n\nFor example\n\n`index.jsp`\n\n```jsx\n<%@ page language="java" contentType="text/html; charset=ISO-8859-1"\n    pageEncoding="ISO-8859-1"%>\n<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">\n<html>\n<head>\n<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">\n<title>Index Page</title>\n</head>\n<body>\n<jsp:include page="display.jsp">\n<jsp:param name="userid" value="Praveen" />\n<jsp:param name="password" value="Praveen" />\n<jsp:param name="name" value="Praveen Oruganti" />\n<jsp:param name="age" value="32" />\n</jsp:include>\n</body>\n</html>\n```\n\n`display.jsp`\n\n```jsx\n<%@ page language="java" contentType="text/html; charset=ISO-8859-1"\n    pageEncoding="ISO-8859-1"%>\n<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">\n<html>\n<head>\n<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">\n<title>Display Page</title>\n</head>\n<body>\nUserID: <%=request.getParameter("userid") %><br>\nPassword is: <%=request.getParameter("password") %><br>\nUser Name: <%=request.getParameter("name") %><br>\nAge: <%=request.getParameter("age") %>\n</body>\n</html>\n\n```\n\n`Jsp useBean`\n\n<jsp:useBean> standard action tag is use to establish a connection between a jsp page and a java bean.\n\nIn web applications of java, jsp and java bean communication is required in the following two cases:\n\n- In a real-time MVC project, a model class (business class) will set the data to a java bean and a jsp (view) will read the data from a bean and finally displays it on the browser. In this class jsp to a java bean communication is required.\n- If multiple jsp pages need common java logic then it separates that java code into a bean and then we call the bean from jsp. In this case also jsp to java bean communication is required.\n\n<jsp:useBean> tag is used for creating an object of a bean class in a jsp page.\n\nEvery java class is not a java bean automatically. A class should have the following qualities to make it as a java bean.\n- Class must be public.\n- Class must contain default constructor.\n- Each private property of the class must have setter or getter or both methods.\n- A class can at most implement Serializable interface.\n\nSyntax\n\n```jsx\n<jsp: useBean id="unique_name_to_identify_bean" class="package_name.class_name" />\n```\n\n`Jsp setProperty`\n\nThis action tag is to set an input value to set input value to a property on a variable of bean class by calling setter () method of the property.\n\n`When use JSP setPriority tag`\n\nWhen a request comes from browser, the protocol is http and it is unknown for the java bean. So, directly input values from browser can\'t be send to a java bean.\n\nThe flow of setting input values is, a jsp page takes request from browser and it will set input values to bean using tag.\n\n<jsp:setProperty> must be used inside <jsp:useBean> tag.\n\n<jsp:setProperty> property contains four attributes, they are;\n\nName and property attributes are mandatory. We shouldn\'t use param and value attribute at time.\n\nIf request parameters names and variable name of java beans or matched then we can directly write <protperty="*">.\n\nSyntax\n\n```jsx\n<jsp:setProperty name="unique_name_to_identify_bean"  property="property_name" />\n```\n\n`Jsp getProperty`\n\nThis action tag is used to read the value of a variable of bean class by calling its getter () method. This action tag must be written at outside of tag.\n\n`Attribute of getProperty tag`\n\nThis action tag has only two attribute called name and property.\n\nIn this tag property="*" is not allowed.\n\nSyntax\n\n```jsx\n<jsp:getProperty name="unique_name_to_identify_bean"  property="property_name" />\n```\n\n`Example`\n\n`Details.java`\n\n```jsx\npackage com.praveen.bean;\n\npublic class Details {\n\n\tpublic Details() {\n\t}\n\n\tprivate String username;\n\tprivate int age;\n\tprivate String password;\n\n\tpublic String getUsername() {\n\t\treturn username;\n\t}\n\n\tpublic void setUsername(String username) {\n\t\tthis.username = username;\n\t}\n\n\tpublic int getAge() {\n\t\treturn age;\n\t}\n\n\tpublic void setAge(int age) {\n\t\tthis.age = age;\n\t}\n\n\tpublic String getPassword() {\n\t\treturn password;\n\t}\n\n\tpublic void setPassword(String password) {\n\t\tthis.password = password;\n\t}\n\n}\n```\n\n`usebean.jsp`\n\n```jsx\n<%@ page language="java" contentType="text/html; charset=ISO-8859-1"\n    pageEncoding="ISO-8859-1"%>\n<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">\n<html>\n<head>\n<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">\n<title>UseBean Page</title>\n</head>\n<body>\n<form action="userdetails.jsp" method="post">\nUser Name: <input type="text" name="username"><br>\nUser Password: <input type="password" name="password"><br>\nUser Age: <input type="text" name="age"><br>\n<input type="submit" value="register">\n</form>\n</body>\n</html>\n```\n\n`userdetails.jsp`\n\n```jsx\n<%@ page language="java" contentType="text/html; charset=ISO-8859-1"\n    pageEncoding="ISO-8859-1"%>\n<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">\n<html>\n<head>\n<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">\n<title>User Details Page</title>\n</head>\n<body>\n<jsp:useBean id="userinfo" class="com.praveen.bean.Details"></jsp:useBean>\n<jsp:setProperty property="*" name="userinfo"/>\nYou have enterted the below details:<br>\n<jsp:getProperty property="username" name="userinfo"/><br>\n<jsp:getProperty property="password" name="userinfo"/><br>\n<jsp:getProperty property="age" name="userinfo" /><br>\n</body>\n</html>\n``` '}}]);