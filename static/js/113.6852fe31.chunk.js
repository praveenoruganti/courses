(this["webpackJsonppraveenoruganti-courses"]=this["webpackJsonppraveenoruganti-courses"]||[]).push([[113],{682:function(e,a,t){"use strict";t.r(a),a.default=" A Map stores the associations between keys and values. Each key links to exactly one value to form a key-value pair known as an entry.\n\n![screenshot of the app](https://praveenoruganti.github.io/courses/images/java/Map1.jpg)\n\n**Map Hirerachy**\n\n![screenshot of the app](https://praveenoruganti.github.io/courses/images/java/Map.png)\n\n**Interfaces in Maps**\n\n- **Map:** defines an object that maps keys to values.\n- **SortedMap:** extends Map. Defines a map that supports the ordering of its keys, either in natural ascending order or by the use of a Comparator.\n- **NavigableMap:** extends SortedMap. Defines a sorted map which supports searching for entries based on closest matches (to the keys, not the values).\n\n**Non-Abstract Classes in Maps**\n\n- **HashMap:** extends AbstractMap, and implements the Map interface. It is roughly equivalent to the HashTable legacy class we covered earlier, but newer, better, faster, stronger.\n- **LinkedHashMap:** extends HashMap, and implements the Map interface. Like the LinkedHashSet, we covered earlier, this one also maintains a linked list under the hood that allows you iterate over entries in the order in which they were inserted.\n- **TreeMap:** extends AbstractMap, and implements the NavigableMap interface. It organizes keys via a Red-Black tree, allowing them to be sorted either in natural ascending order or by the use of a Comparator.\n- **EnumMap:** extends AbstractMap. A specialized map meant specifically for working with enum types, where all the keys in the map must come from the same enum.\n- **WeakHashMap:** extends AbstractMap, and implements the Map interface. Essentially identical to HashMap, but with weak keys. This means that entries are susceptible to being discarded by Java\u2019s garbage collector when their keys are no longer in ordinary use.\n- **IdentityHashMap:** extends AbstractMap, and implements the Map interface. Again, essentially identical to HashMap, but uses reference-equality instead of object-equality when comparing keys or values. The API explicitly says this class is not for general usage.\n\n "}}]);