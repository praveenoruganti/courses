(this["webpackJsonppraveenoruganti-courses"]=this["webpackJsonppraveenoruganti-courses"]||[]).push([[64],{633:function(t,n,r){"use strict";r.r(n),n.default=" Insertion sort is a simple sorting algorithm that works the way we sort playing cards in our hand. We choose one card and insert in its position.\n\nThis is useful only for sorting small set of elements.\n\n**Pick element and insert it into sorted sequence**\n\nFor example,\n```jsx\nint[] num = { 90, 24, 46, 35, 32 };\n```\n\nLets see how insertion sort works\n\n```jsx\n90,24,46,35,32\n24,90,46,35,32\n24,46,90,35,32\n24,35,46,90,32\n24,32,35,46,90\n```\n\nLet's start coding for insertion sort\n\n```jsx\npackage com.praveen.sort;\n\nimport java.util.Arrays;\n\npublic class InsertionSort {\n\tpublic static void main(String[] args) {\n\t\tint[] arr = { 90, 24, 46, 35, 32 };\n\t\tinsertion(arr);\n\t\tSystem.out.println(Arrays.toString(arr));\n\t}\n\n\tprivate static void insertion(int[] arr) {\n\t\tfor (int i = 0; i < arr.length - 1; i++) {\n\t\t\tfor (int j = i + 1; j > 0; j--) {\n\t\t\t\tif (arr[j] < arr[j - 1]) {\n\t\t\t\t\tswap(arr, j, j - 1);\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate static void swap(int[] arr, int first, int second) {\n\t\tint temp = arr[first];\n\t\tarr[first] = arr[second];\n\t\tarr[second] = temp;\n\t}\n}\n\n```\n\n**Output**\n```jsx\n[24, 32, 35, 46, 90]\n```\n\n "}}]);