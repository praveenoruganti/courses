(this["webpackJsonppraveenoruganti-courses"]=this["webpackJsonppraveenoruganti-courses"]||[]).push([[99],{668:function(n,e,t){"use strict";t.r(e),e.default=' ![screenshot of the app](https://praveenoruganti.github.io/courses/images/java/filehandling.png)\n\nFile Handling implies how to read from and write to file in Java. Java provides the basic I/O package for reading and writing the streams. java.io package allows to do all input and output tasks in Java.\n\nJava uses Stream for file handling.\n\n**Types of Streams**\n\nThe java.io package contains a large number of stream classes that provide capabilities for processing all types of data. These classes may be categorized into two groups based on the data type on which they operate.\n\n- Byte stream classes\n- Character stream classes\n\nLet\'s see the sample code\n\n```jsx\n\npublic class CreateFile {\n    public static void main(String args[]) {\n        try {\n            File file = new File("praveen.txt");\n            if (file.createNewFile()) {\n            System.out.println("File created" + file.getName());\n            } else {\n            System.out.println("File created successfully");\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}\n\n```\n\n**Output**\n\nFile created successfully\n\n```jsx\n\npublic class FileWriterExample {\n    public static void main(String args[]) {\n        FileWriter fw = null;\n        try {\n            fw = new FileWriter("Praveen.txt");\n            fw.write("This is Praveen Oruganti");\n        } catch (IOException e) {\n             e.printStackTrace();\n        } finally {\n            if (null != fw) {\n                try {\n                    fw.close();\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n        }\n    }\n}\n\n```\n\n```jsx\npublic class ReadFile {\n    public static void main(String args[]) {\n        FileReader fr = null;\n            try {\n            fr = new FileReader("Praveen.txt");\n            int i;\n            while ((i = fr.read()) != -1) {\n            System.out.print((char) i);\n            }\n        } catch (IOException ie) {\n            ie.printStackTrace();\n        }\n    }\n}\n```\n\n```jsx\npublic class FileHandlingUsingJava8 {\n\n    public static void main(String args[]) throws IOException {\n        List<String> al=Files.lines(Paths.get("praveen.txt"))\n            .filter(line-> line.startsWith("C"))\n            .map(line->line.replaceAll("C", "P"))\n            .collect(Collectors.toList());\n        System.out.println(al);\n\n        Files.walk(Paths.get("."))\n            .filter(path->path.toString().toLowerCase().endsWith(".txt"))\n            .forEach(System.out::println);\n    }\n}\n\n```\n '}}]);