(this["webpackJsonppraveenoruganti-courses"]=this["webpackJsonppraveenoruganti-courses"]||[]).push([[143],{712:function(n,a,e){"use strict";e.r(a),a.default=' JSON stands for Javascript Object Notation. JSON is a text-based data format that is used to store and transfer data.\n\n```jsx\nuser.JSON\n{\n "name": "Praveen Oruganti",\n "favoriteNumber": 1,\n "isProgrammer": true,\n "hobbies" : ["Tech Blogging", "Listening Songs", "Watching Movies", "Playing Cricket/Tennis"],\n "friends": [{\n     "name": "Khaja",\n     "favoriteNumber": 5,\n     "isProgrammer": false,\n     "hobbies" : ["Listening Songs", "Watching Movies"],\n     "friends": [...]\n }]\n}\n```\nIn JSON, the data are in key/value pairs separated by a comma ,.\nJSON was derived from JavaScript. So, the JSON syntax resembles JavaScript object literal syntax. However, the JSON format can be accessed and be created by other programming languages too.\n\n**Note**\n\nJavaScript Objects and JSON are not the same.\n\n### JSON Data\nJSON data consists of key/value pairs similar to JavaScript object properties. The key and values are written in double quotes separated by a colon :. For example, "name": "Praveen Oruganti"\n\n**Note**\n\nJSON data requires double quotes for the key.\n\n### JSON Object\nThe JSON object is written inside curly braces { }. JSON objects can contain multiple key/value pairs. For example,\n// JSON object\n{ "name": "Praveen", "age": 35 }\n\n### JSON Array\nJSON array is written inside square brackets [ ]. For example,\n// JSON array\n[ "apple", "mango", "banana"]\n\n// JSON array containing objects\n[\n    { "name": "Praveen", "age": 35 },\n    { "name": "Khaja", "age": 36 }.\n    { "name": "Varma", "age": 38 }\n]\n\n**Note**\n\nJSON data can contain objects and arrays. However, unlike JavaScript objects, JSON data cannot contain functions as values.\n\n**Accessing JSON Data**\n\nYou can access JSON data using the dot notation.\n```jsx\n// JSON object\nconst data = {\n    "name": "Praveen",\n    "age": 35,\n    "hobby": {\n\t"reading" : true,\n\t"gaming" : false,\n\t"sport" : "Cricket"\n    },\n    "class" : ["JavaScript", "HTML", "CSS"]\n}\n\n// accessing JSON object\nconsole.log(data.name); // Praveen\nconsole.log(data.hobby); // { gaming: false, reading: true, sport: "Cricket"}\n\nconsole.log(data.hobby.sport); // Cricket\nconsole.log(data.class[1]); // HTML\n```\nWe use the . notation to access JSON data. Its syntax is: variableName.key\n\nYou can also use square bracket syntax [] to access JSON data. For example,\n\n```jsx\n// JSON object\nconst data = {\n    "name": "Praveen",\n    "age": 35\n}\n\n// accessing JSON object\nconsole.log(data["name"]); // Praveen\n```\n\n### JavaScript Objects VS JSON\nThough the syntax of JSON is similar to the JavaScript object, JSON is different from JavaScript objects.\n![screenshot of the app](https://praveenoruganti.github.io/courses/images/js/JSON%20Vs%20Object.PNG)\n\n### Converting JSON to JavaScript Object\nYou can convert JSON data to a JavaScript object using the built-in JSON.parse() function. For example,\n```jsx\n// JSON object\nconst JSONData = \'{ "name": "Praveen", "age": 35 }\';\n\n// converting to JavaScript object\nconst obj = JSON.parse(JSONData);\n\n// accessing the data\nconsole.log(obj.name); // Praveen\n```\n### Converting JavaScript Object to JSON\nYou can also convert JavaScript objects to JSON format using the JavaScript built-in JSON.stringify() function. For example,\n```jsx\n// JavaScript object\nconst JSONData = { "name": "Praveen", "age": 35 };\n\n// converting to JSON\nconst obj = JSON.stringify(JSONData);\n\n// accessing the data\nconsole.log(obj); // "{"name":"Praveen","age":35}"\n```\n### Use of JSON\nJSON is the most commonly used format for transmitting data (data interchange) from a server to a client and vice-versa. JSON data are very easy to parse and use. It is fast to access and manipulate JSON data as they only contain texts.\n\nJSON is language independent. You can create and use JSON in other programming languages too.\n\nYou can check out the [Demo](https://praveenoruganti.github.io/courses/demo/js/JSON)\n\n\n\n\n\n\n\n '}}]);