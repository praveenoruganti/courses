(this["webpackJsonppraveenoruganti-courses"]=this["webpackJsonppraveenoruganti-courses"]||[]).push([[121],{690:function(n,t,i){"use strict";i.r(t),t.default=' - This method will not return anything.\n- This method will take lambda expression as argument and apply that lambda expression for each element present in the stream.\n\nFor example,\n\n```jsx\nl.stream().forEach(s->System.out.println(s));\nl3.stream().forEach(System.out:: println);\n```\n\nLet\'s see another example,\n\n```jsx\n\npublic class ForEachDemo {\n\npublic static void main(String args[]) {\n    withoutForEach();\n    withForEach();\n}\n\nprivate static void withoutForEach() {\n    System.out.println("From withoutForEach");\n\n    List<Integer> intList = Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9);\n    for (int i : intList) {\n        System.out.println(i);\n    }\n    }\n\n    private static void withForEach() {\n        System.out.println("From withForEach");\n        List<Integer> intList = Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9);\n        intList.forEach(System.out::println);\n    }\n\n}\n\n\n```\n\n**Output**\n\n```jsx\nFrom withoutForEach\n123456789\nFrom withForEach\n123456789\n```\n\n '}}]);