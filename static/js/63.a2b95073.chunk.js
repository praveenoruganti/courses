(this["webpackJsonppraveenoruganti-courses"]=this["webpackJsonppraveenoruganti-courses"]||[]).push([[63],{632:function(t,n,r){"use strict";r.r(n),n.default=" Selection sort is combination of searching and sorting.\n\nIt sorts the array by repeatedly finding the minimum element from unsorted part and putting it at the beginning until the sorting is achieved.\n\nFor example,\n\n```jsx\nint[] num = { 90, 24, 46, 35, 32 };\n```\n\nLets see how selection sort works\n\n```jsx\n\n90,24,46,35,32\n24,90,46,35,32\n24,32,46,35,90\n24,32,35,46,90\n\n```\n\nLet's start coding for selection sort\n\n```jsx\npackage com.praveen.sort;\n\nimport java.util.Arrays;\n\npublic class SelectionSort {\n\n\tpublic static void main(String[] args) {\n\t\tint[] arr = { 90, 24, 46, 35, 32 };\n\t\tselection(arr);\n\t\tSystem.out.println(Arrays.toString(arr));\n\n\t}\n\n\tprivate static void selection(int[] arr) {\n\t\tfor (int i = 0; i < arr.length; i++) {\n\t\t\t// find the max item in the remaining array and swap with correct index\n\t\t\tint last = arr.length - i - 1;\n\t\t\tint maxIndex = getMaxIndex(arr, 0, last);\n\t\t\tswap(arr, maxIndex, last);\n\t\t}\n\t}\n\n\tprivate static void swap(int[] arr, int first, int second) {\n\t\tint temp = arr[first];\n\t\tarr[first] = arr[second];\n\t\tarr[second] = temp;\n\t}\n\n\tprivate static int getMaxIndex(int[] arr, int start, int end) {\n\t\tint max = start;\n\t\tfor (int i = start; i <= end; i++) {\n\t\t\tif (arr[max] < arr[i]) {\n\t\t\t\tmax = i;\n\t\t\t}\n\t\t}\n\t\treturn max;\n\t}\n}\n\n\n```\n\n**Output**\n```jsx\n[24, 32, 35, 46, 90]\n\n``` "}}]);