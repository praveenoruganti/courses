(this["webpackJsonppraveenoruganti-courses"]=this["webpackJsonppraveenoruganti-courses"]||[]).push([[27],{596:function(n,t,i){"use strict";i.r(t),t.default=' CSS transitions allows you to change property values smoothly, over a given duration.\n\n- transition\n- transition-delay\n- transition-duration\n- transition-property\n- transition-timing-function\n\nTo create a transition effect, you must specify two things\n\n- the CSS property you want to add an effect to\n- the duration of the effect\n\n**Note**\n\n  If the duration part is not specified, the transition will have no effect, because the default value is 0.\n\nThe transition-timing-function property specifies the speed curve of the transition effect.\n\nThe transition-timing-function property can have the following values:\n\n- ease - specifies a transition effect with a slow start, then fast, then end slowly (this is default)\n- linear - specifies a transition effect with the same speed from start to end\n- ease-in - specifies a transition effect with a slow start\n- ease-out - specifies a transition effect with a slow end\n- ease-in-out - specifies a transition effect with a slow start and end\n- cubic-bezier(n,n,n,n) - lets you define your own values in a cubic-bezier function\n\nThe transition-delay property specifies a delay (in seconds) for the transition effect.\n\n**HTML**\n\n```html\n<h1>The transition Property</h1>\n<p>Hover over the div element below, to see the transition effect.</p>\n<h1>\n  The transition effect will start when the specified CSS property (width)\n  changes value.\n</h1>\n<div class="transition1"></div>\n<br />\n\n<h1>Transition effect for both the width and height property</h1>\n<div class="transition2"></div>\n<br />\n\n<h1>The transition-timing-function Property</h1>\n<p>Hover over the div elements below, to see the different speed curves:</p>\n<br />\n<div class="transition-timing-function transition-timing-function-linear">\n  linear\n</div>\n<br />\n<div class="transition-timing-function transition-timing-function-ease">\n  ease\n</div>\n<br />\n<div class="transition-timing-function transition-timing-function-ease-in">\n  ease-in\n</div>\n<br />\n<div class="transition-timing-function transition-timing-function-ease-out">\n  ease-out\n</div>\n<br />\n<div class="transition-timing-function transition-timing-function-ease-in-out">\n  ease-in-out\n</div>\n<br />\n\n<h1>The transition-delay Property</h1>\n<p>Hover over the div element below, to see the transition effect:</p>\n<br />\n<div class="delay"></div>\n<br />\n\n<h1>Transition + Transform</h1>\n<p>Hover over the div element below:</p>\n<br />\n<div class="trans"></div>\n<br />\n\n<h1>Using The transition Shorthand Property</h1>\n<p>Hover over the div element below, to see the transition effect:</p>\n<br />\n<div class="transShort"></div>\n<br />\n\n<h1>Hover Me</h1>\n<div class="circle">Hover Me</div>\n```\n\n**CSS**\n\n```jsx\n* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n\ndiv {\n    margin: 25px;\n}\n\n.transition1 {\n    width: 100px;\n    height: 100px;\n    background: red;\n    transition: width 2s;\n}\n\n.transition1:hover {\n    width: 300px;\n}\n\n.transition2 {\n    width: 100px;\n    height: 100px;\n    background: red;\n    transition: width 2s, height 4s;\n}\n\n.transition2:hover {\n    width: 300px;\n    height: 300px;\n}\n\n.transition-timing-function {\n    width: 100px;\n    height: 100px;\n    background: red;\n    transition: width 2s;\n}\n\n.transition-timing-function-linear {\n    transition-timing-function: linear;\n}\n\n.transition-timing-function-ease {\n    transition-timing-function: ease;\n}\n\n.transition-timing-function-ease-in {\n    transition-timing-function: ease-in;\n}\n\n.transition-timing-function-ease-out {\n    transition-timing-function: ease-out;\n}\n\n.transition-timing-function-ease-in-out {\n    transition-timing-function: ease-in-out;\n}\n\n.transition-timing-function:hover {\n    width: 300px;\n}\n\n.delay {\n    width: 100px;\n    height: 100px;\n    background: red;\n    transition: width 3s;\n    transition-delay: 1s;\n}\n\n.delay:hover {\n    width: 300px;\n}\n\n.trans {\n    width: 100px;\n    height: 100px;\n    background: red;\n    transition: width 2s, height 2s, transform 2s;\n}\n\n.trans:hover {\n    width: 300px;\n    height: 300px;\n    transform: rotate(180deg);\n}\n\n.transShort {\n    width: 100px;\n    height: 100px;\n    background: red;\n    transition: width 2s linear 1s;\n}\n\n.transShort:hover {\n    width: 300px;\n}\n\n.circle {\n    width: 100px;\n    padding: 50px 0;\n    line-height: 0;\n    background: linear-gradient(45deg, black, darkred);\n    color: white;\n    border-radius: 50px;\n    cursor: pointer;\n    text-align: center;\n    transition: 1s ease;\n}\n\n.circle:hover {\n    background: linear-gradient(45deg, black, limegreen);\n    transform: rotate(360deg);\n}\n```\n\nYou can check out the [Demo](https://praveenoruganti.github.io/courses/demo/css/Transitions/)\n '}}]);