(this["webpackJsonppraveenoruganti-courses"]=this["webpackJsonppraveenoruganti-courses"]||[]).push([[144],{713:function(t,n,e){"use strict";e.r(n),n.default=' In JavaScript, a block of code can be executed in specified time intervals. These time intervals are called timing events.\n\n### JavaScript setInterval()\nThe setInterval() method repeats a block of code at every given timing event.\nThe commonly used syntax of JavaScript setInterval is:\n```jsx\nsetInterval(function, milliseconds);\n```\nIts parameters are:\n- function - a function containing a block of code\n- milliseconds - the time interval between the execution of the function\n\nThe setInterval() method returns an intervalID which is a positive integer.\n\nFor example,\n\n```HTML\n<!DOCTYPE html>\n<html lang="en-US">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1">\n    <title>All About setInterval</title>\n    <script src="script.javascript" defer><\/script>\n</head>\n<body>\n    <h1>setInterval() </h1>\n    <h2 id="timer-text">0</h2>\n    <button id="btn-start">Start Timer</button>\n</body>\n</html>\n```\n```jsx\nconst timerText = document.getElementById("timer-text");\nconst btnStart = document.getElementById("btn-start");\nlet count = 0;\n\n\nbtnStart.addEventListener("click", function () {\n  intervalID = setInterval(function () {\n    count += 1;\n    timerText.textContent = count;\n  }, 1000);\n});\n\n\n```\n\n### JavaScript clearInterval()\nAs you have seen in the above example, the program executes a block of code at every specified time interval. If you want to stop this function call, then you can use the clearInterval() method.\n\nThe syntax of clearInterval() method is:\n```jsx\nclearInterval(intervalID);\n```\nHere, the intervalID is the return value of the setInterval() method.\n\n```HTML\n<!DOCTYPE html>\n<html lang="en-US">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1">\n    <title>All About setInterval and clearInterval</title>\n    <script src="script.javascript" defer><\/script>\n</head>\n<body>\n    <h1>setInterval() and clearInterval()</h1>\n    <h2 id="timer-text">0</h2>\n    <button id="btn-start">Start Timer</button>\n    <button id="btn-pause">Pause Timer</button>\n</body>\n</html>\n```\n```jsx\nconst timerText = document.getElementById("timer-text");\nconst btnStart = document.getElementById("btn-start");\nconst btnPause = document.getElementById("btn-pause");\nlet count = 0;\nlet intervalID;\n\nbtnStart.addEventListener("click", function () {\n  intervalID = setInterval(function () {\n    count += 1;\n    timerText.textContent = count;\n  }, 1000);\n});\n\nbtnPause.addEventListener("click", function () {\n  clearInterval(intervalID);\n});\n\n```\n\nYou can check out the [Demo](https://praveenoruganti.github.io/courses/demo/js/Interval)\n\n![screenshot of the app](https://praveenoruganti.github.io/courses/images/js/setInterval%20and%20clearInterval.PNG)\n\n**Note**\n\nIf you only need to execute a function one time, it\'s better to use the setTimeout() method.\n\n\n\n '}}]);