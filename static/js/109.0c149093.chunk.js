(this["webpackJsonppraveenoruganti-courses"]=this["webpackJsonppraveenoruganti-courses"]||[]).push([[109],{678:function(n,e,t){"use strict";t.r(e),e.default=' ![screenshot of the app](https://praveenoruganti.github.io/courses/images/java/arrays.jpg)\n\nArrays -> Random Access\n\nAn array is group of like typed variables and of fixed size.\n\nAn array is an index collection of fixed no of homogeneous data elements. The main advantage of array is we can represent multiple value by using single variable, so that readability of code will be improved.\n\nFor example,\n\n```jsx\nint a[]= new int[10];\na[0]=1;\nSystem.out.println(a);\n\n```\n\n**Output**\n\n{100000000}\n\nBy default 0 values are present in an int array.\n\n**Iterating an Array**\n\n```jsx\nint values[]={12,-2,3,10};\nfor(int i=0;i<values.length;i++){\n   System.out.println(values[i]);\n}\n\n```\n\n- For comparing two arrays we can use Arrays.equals(a1,a2);\n- For comparing two arrays of arrays we can use Arrays.deepEquals(a1,a2);\n- To print an array we can use Arrays.toString(a);\n- To sort an array we can use Arrays.sort(a);\n- Binary search in an sorted array we can use Arrays.binarySearch(int[] a,int key) where key will be index.\n- To copy an array we can use Arrays.copyof(int[] original,int newLength)\n- To convert an array to List we can use Arrays.asList(a)\n\n**Limitation of Arrays**\n\n- Need to know size in advance. Too small size cannot add more elements where as Too large size is waste of space.\n\n- We cannot insert/remove the elements infront of others except at the end.\n\n- some operations like search will be slow.\n\n```jsx\npublic boolean contains(int[] nums,int target){\n\nfor(int i=0;i<nums.lenght;i++){\nif(nums[i]==target){\nreturn true;\n}\n}\nreturn false;\n}\n\n\n```\n\n**Array Programs**\n\n**Write a java program to find duplicate element in an array**\n\n```jsx\npublic class DuplicateInArray\n{\n public static void main(String[] args)\n {\n  int[] array = {1,1,2,3,4,5,6,7,8,8};\n\n  Set<Integer> set = new HashSet<Integer>();\n\n  for(inti = 0; i<array.length ; i++)\n  {\n   //If same integer is already present then add method will return FALSE\n   if(set.add(array[i]) == false)\n   {\n    System.out.println("Duplicate element found : " + array[i]);\n   }\n  }\n }\n}\n\n```\n\n**Output**\n\nDuplicate element found : 1\n\nDuplicate element found : 8\n\n**Write a java program to find second largest number in an array**\n\n```jsx\npublic class SecondLargestInArrayExample{\n    public static int getSecondLargest(int[] a, int total){\n        int temp;\n        for (int i = 0; i < total; i++)\n                {\n                    for (int j = i + 1; j < total; j++)\n                    {\n                        if (a[i] > a[j])\n                        {\n                            temp = a[i];\n                            a[i] = a[j];\n                            a[j] = temp;\n                        }\n                    }\n                }\n                return a[total-2];\n        }\n    public static void main(String args[]){\n        int a[]={1,2,5,6,3,2};\n        int b[]={44,66,99,77,33,22,55};\n        System.out.println("Second Largest: "+getSecondLargest(a,6));\n        System.out.println("Second Largest: "+getSecondLargest(b,7));\n    }\n}\n\n\n```\n\n**Output**\n\nSecond Largest: 5\n\nSecond Largest: 77\n\n**How to find missing number in the array**\n\n```jsx\npublic class MissingNumber{\n    public static void main(String[] args){\n        int total_num;\n        int[] numbers =new int[]{1,2,3,4,6,7};\n        total_num=7;\n        int expected_num_sum=total_num*((total_num+1)/2);\n        int num_sum=0;\n        for(int i: numbers){\n            num_sum+=i;\n        }\n        System.out.print(expected_num_sum-num_sum);\n        System.out.print("\n");\n    }\n}\n\n```\n\n**How to find number occuring odd number of times in an array**\n\n```jsx\npublic class OddOccuringNumber {\n  public static intfindNumber(int [] A){\n   int x=0;\n   for(inti=0;i<A.length;i++){\n    x= x^A[i];\n   }\n   return x;\n  }\n  public static void main(String[] args) {\n   int[] A = { 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 5, 6, 6, 6, 6, 7, 7 };\n   System.out.println("Element appearing add number of times: " + findNumber(A));\n  }\n }\n\n\n```\n\n**Output**\n\nElement appearing add number of times: 5\n\n**Write a java program to count occurrences of each element in an array**\n\n```jsx\npublic class Count_Occurrence {\n    public static void main(String[]args) {\n        int n, x, count =0, i=0;\n        Scanner s =new Scanner(System.in);\n        System.out.print("Enter no. of elements you want in array:");\n        n =s.nextInt();\n        int a[]=newint[n];\n        System.out.println("Enter all the elements:");\n        for(i=0;i< n;i++){\n            a[i]=s.nextInt();\n        }\n        System.out.print("Enter the element of which you want to count number of occurrences:");\n        x =s.nextInt();\n        for(i=0;i< n;i++){\n            if(a[i]== x){\n                count++;\n            }\n        }\n        System.out.println("Number of Occurrence of the Element:"+count);\n    }\n }\n\n\n```\n\n**Output**\n\n$ javac Count_Occurrence.java\n\n$ javaCount_Occurrence\n\nEnter no. of elements you want in array:5\n\nEnter all the elements:\n\n2\n\n3\n\n3\n\n4\n\n3\n\nEnter the element of which you want to count number of occurrences:3\n\nNumber of Occurrence of the Element:3\n\n**How to find the missing element in integer array of 1 to 7**\n\n```jsx\n\nclass GFG {\n    staticintsearch(int ar[],int size){\n        int a = 0, b = size - 1;\n        int mid = 0;\n        while((b - a) > 1)\n        {\n            mid = (a + b) / 2;\n            if((ar[a] - a) != (ar[mid] - mid))\n                b = mid;\n            else f((ar[b] - b) != (ar[mid] - mid))\n                a = mid;\n        }\n        return(ar[mid] + 1);\n    }\n\n    // Driver Code\n    public static void main (String[] args)\n    {\n        int ar[] = { 1, 2, 3, 4, 5, 6, 8};\n        int size = ar.length;\n        System.out.println("Missing number: "+ search(ar, size));\n    }\n}\n\n\n```\n\n**Output**\n\nMissing number: 7\n\n**How to cut or remove an element from the array**\n\n```jsx\npublic class RemoveElement{\n\n    public static void main(String[] args){\n    int[] my_array={25,14,56,15,36,56,77,18,29,49};\n\n    System.out.println("Original Array : "+Arrays.toString(my_array));\n\n    // Remove the second element (index->1, value->14) of the array\n    int removeIndex=1;\n\n    for(int i=removeIndex;i<my_array.length-1;i++){\n        my_array[i]=my_array[i+1];\n    }\n    // We cannot alter the size of an array , after the removal, the last and second last element in the array will exist twice\n    System.out.println("After removing the second element: "+Arrays.toString(my_array));\n    }\n}\n\n```\n\n**Output**\n\nOriginal Array : [25, 14, 56, 15, 36, 56, 77, 18, 29, 49]\n\nAfter removing the second element: [25, 56, 15, 36, 56, 77, 18, 29, 49, 49]\n\n**How to get largest and smallest number in an array**\n\n```jsx\npublic class FindLargestSmallestNumber {\n\n public static void main(String[] args) {\n\n  //array of 10 numbers\n  int numbers[] = new int[]{32,43,53,54,32,65,63,98,43,23};\n\n  //assign first element of an array to largest and smallest\n  int smallest = numbers[0];\n  int largetst = numbers[0];\n\n  for(inti=1; i<numbers.length; i++)\n  {\n   if(numbers[i] >largetst)\n    largetst = numbers[i];\n   else if (numbers[i] < smallest)\n    smallest = numbers[i];\n\n  }\n\n  System.out.println("Largest Number is : " + largetst);\n  System.out.println("Smallest Number is : " + smallest);\n }\n}\n\n\n```\n\n**Output**\n\nLargest Number is : 98\n\nSmallest Number is : 23\n\n\n '}}]);