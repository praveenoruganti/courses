(this["webpackJsonppraveenoruganti-courses"]=this["webpackJsonppraveenoruganti-courses"]||[]).push([[145],{714:function(e,t,n){"use strict";n.r(t),t.default=' ### JavaScript setTimeout()\nThe setTimeout() method executes a block of code after the specified time. The method executes the code only once.\nThe commonly used syntax of JavaScript setTimeout is:\n```jsx\nsetTimeout(function, milliseconds);\n```\nIts parameters are:\n- function - a function containing a block of code\n- milliseconds - the time after which the function is executed\n\nThe setTimeout() method returns an intervalID, which is a positive integer.\n\nFor Example,\n\n```HTML\n<!DOCTYPE html>\n<html lang="en-US">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1">\n    <title>All About setTimeout</title>\n    <script src="script.javascript" defer><\/script>\n</head>\n<body>\n    <h1> setTimeout()</h1>\n    <button id="show-message">Show Message</button>\n</body>\n</html>\n```\n```jsx\nconst btnShowMsg = document.getElementById("show-message");\n\nlet intervalID;\n\nbtnShowMsg.addEventListener("click", function () {\n  intervalID = setTimeout(function () {\n    alert(\n      \'Checkout my tech Website \n "https://praveenoruganti.github.io"\'\n    );\n  }, 2000);\n});\n\n```\n### JavaScript clearTimeout()\nAs you have seen in the above example, the program executes a block of code after the specified time interval. If you want to stop this function call, you can use the clearTimeout() method.\n\nThe syntax of clearTimeout() method is:\n```jsx\nclearTimeout(intervalID);\n```\nHere, the intervalID is the return value of the setTimeout() method.\n\n**Note**\n\nYou generally use the clearTimeout() method when you need to cancel the setTimeout() method call before it happens.\n\nFor example,\n\n```HTML\n<!DOCTYPE html>\n<html lang="en-US">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1">\n    <title>All About setTimeout and clearTimeout</title>\n    <script src="script.javascript" defer><\/script>\n</head>\n<body>\n    <h1> setTimeout() and clearTimeout()</h1>\n    <button id="show-message">Show Message</button>\n    <button id="cancel-message">Cancel Message</button>\n</body>\n</html>\n```\n```jsx\nconst btnShowMsg = document.getElementById("show-message");\nconst btnCancelMsg = document.getElementById("cancel-message");\n\nlet intervalID;\n\nbtnShowMsg.addEventListener("click", function () {\n  intervalID = setTimeout(function () {\n    alert(\n      \'Checkout my tech Website \n "https://praveenoruganti.github.io"\'\n    );\n  }, 2000);\n});\n\nbtnCancelMsg.addEventListener("click", function () {\n  clearTimeout(intervalID);\n});\n\n```\n\nYou can check out the [Demo](https://praveenoruganti.github.io/courses/demo/js/Timeout)\n\n![screenshot of the app](https://praveenoruganti.github.io/courses/images/js/setTimeout%20and%20clearTimeout.PNG)\n\n\n\n\n '}}]);