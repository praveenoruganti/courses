(this["webpackJsonppraveenoruganti-courses"]=this["webpackJsonppraveenoruganti-courses"]||[]).push([[255],{824:function(e,n,a){"use strict";a.r(n),n.default=" Cursor is a database object used by applications to manipulate data in a set on a row-byrow basis, instead of the typical SQL commands that operate on all the rows in the set at\none time.\n\nIn order to work with a cursor we need to perform some steps in the following order:\n\n1. Declare cursor\n2. Open cursor\n3. Fetch row from the cursor\n4. Process fetched row\n5. Close cursor\n6. De-allocate cursor\n\n**What is The CURSOR Usage?**\n\nUsing a CURSOR, The PL/SQL program can control the CONTEXT AREA, As the SQL Statement is being processed.\n\n**What are the CURSOR Features?**\n\nCURSOR Allows to FETCH and process Rows returned by a SELECT statement, One Row at a time.\n\nA CURSOR is named, such that it can be referenced by the PL/SQL programmer dynamically at run time.\n\n**Disadvantages of cursors**\n\nEach time you fetch a row from the cursor, it results in a network roundtrip, where as a normal SELECT query makes only one rowundtrip, however large the resultset is. Cursors are also costly because they require more resources and temporary storage (results in more IO operations). \n\nFurther, there are restrictions on the SELECT statements that can be used with some types of cursors. Most of the times, set based operations can be used instead of cursors.\n\nHere is an example:\n\nIf you have to give a flat hike to your employees using the following criteria:\n\nSalary between 30000 and 40000 -- 5000 hike\n\nSalary between 40000 and 55000 -- 7000 hike\n\nSalary between 55000 and 65000 -- 9000 hike\n\nIn this situation many developers tend to use a cursor, determine each employee's salary and update his salary according to the above formula. But the same can be achieved by\nmultiple update statements or can be combined in a single UPDATE statement as shown below:\n\n```jsx\nUPDATE tbl_emp SET salary =\nCASE WHEN salary BETWEEN 30000 AND 40000 THEN salary + 5000\nWHEN salary BETWEEN 40000 AND 55000 THEN salary + 7000\nWHEN salary BETWEEN 55000 AND 65000 THEN salary + 10000\nEND\n```\n\nAnother situation in which developers tend to use cursors: You need to call a stored procedure when a column in a particular row meets certain condition. You don't have to\nuse cursors for this. This can be achieved using WHILE loop, as long as there is a unique key to identify each row.\n\n\n\n "}}]);