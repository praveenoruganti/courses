(this["webpackJsonppraveenoruganti-courses"]=this["webpackJsonppraveenoruganti-courses"]||[]).push([[142],{711:function(e,t,n){"use strict";n.r(t),t.default=' In JavaScript, date and time are represented by the Date object. The Date object provides the date and time information and also provides various methods.\n\nA JavaScript date defines the EcmaScript epoch that represents milliseconds since 1 January 1970 UTC. This date and time is the same as the UNIX epoch (predominant base value for computer-recorded date and time values).\n\n### Creating Date Objects\nThere are four ways to create a date object.\n- new Date()\n- new Date(milliseconds)\n- new Date(Date string)\n- new Date(year, month, day, hours, minutes, seconds, milliseconds)\n\n**new Date()**\n\nYou can create a date object using the new Date() constructor. For example,\n```jsx\nconst timeNow = new Date();\nconsole.log(timeNow); // shows current date and time\n```\n**new Date(milliseconds)**\n\nThe Date object contains a number that represents milliseconds since 1 January 1970 UTC.\nnew Date(milliseconds) creates a new date object by adding the milliseconds to the zero time. For example,\n\n```jsx\nconst time1 = new Date(0);\n\n// epoch time\nconsole.log(time1); // Thu Jan 01 1970 05:30:00\n\n// 100000000000 milliseconds after the epoch time\nconst time2 = new Date(100000000000)\nconsole.log(time2); // Sat Mar 03 1973 15:16:40\n```\nNote: 1000 milliseconds is equal to 1 second.\n\n**new Date(date string)**\n\nnew Date(date string) creates a new date object from a date string.\nIn JavaScript, there are generally three date input formats.\n**ISO Date Formats**\n\nYou can create a date object by passing ISO date formats. For example,\n```jsx\n// ISO Date(International Standard)\nconst date = new Date("2020-07-01");\n\n// the result date will be according to UTC\nconsole.log(date); // Wed Jul 01 2020 05:45:00 GMT+0545\n```\nYou can also pass only the year and month or only the year. For example,\n```jsx\nconst date = new Date("2020-07");\nconsole.log(date); // Wed Jul 01 2020 05:45:00 GMT+0545\n\nconst date1 = new Date("2020");\nconsole.log(date1); // Wed Jul 01 2020 05:45:00 GMT+0545\n```\nYou can also pass specific time to ISO dates.\n```jsx\nconst date = new Date("2020-07-01T12:00:00Z");\nconsole.log(date); // Wed Jul 01 2020 17:45:00 GMT+0545\n```\nNote: Date and time are separated with capital letter T. And UTC time is defined with capital Z.\n\n**Short and Long date format**\n\nThe other two date formats are short date format and long date format.\n```jsx\n// short date format "MM/DD/YYYY"\nconst date = new Date("03/25/2015");\nconsole.log(date); // Wed Mar 25 2015 00:00:00 GMT+0545\n\n// long date format "MMM DD YYYY"\nconst date1 = new Date("Jul 1 2020");\nconsole.log(date1); // Wed Jul 01 2020 00:00:00 GMT+0545\n\n// month and day can be in any order\nconst date2 = new Date("1 Jul 2020");\nconsole.log(date2); // Wed Jul 01 2020 00:00:00 GMT+0545\n\n// month can be full or abbreviated. Also month names are insensitive.\n// comma are ignored\nconst date3 = new Date("July 1 2020");\nconsole.log(date3); // Wed Jul 01 2020 00:00:00 GMT+0545\n\nconst date4 = new Date("JULY, 1, 2020");\nconsole.log(date4); // Wed Jul 01 2020 00:00:00\n```\n**new Date(year, month, day, hours, minutes, seconds, milliseconds)**\n\nnew Date(year, month,...) creates a new date object by passing specific date and time. For example,\n```jsx\nconst time1 = new Date(2020, 1, 20, 4, 12, 11, 0);\nconsole.log(time1); // Thu Feb 20 2020 04:12:11\n```\nThe passed argument has a specific order.\nIf four numbers are passed, it represents year, month, day and hours. For example,\n```jsx\nconst time1 = new Date(2020, 1, 20, 4);\nconsole.log(time1); // Thu Feb 20 2020 04:00:00\n```\nSimilarly, if two arguments are passed, it represents year and month. For example,\n```jsx\nconst time1 = new Date(2020, 1);\nconsole.log(time1); // Sat Feb 01 2020 00:00:00\n```\n**Note**\n\nIf you pass only one argument, it is treated as milliseconds. Hence, you have to pass two arguments to use this date format.\nIn JavaScript, months are counted from 0 to 11. January is 0 and December is 11.\n\n### JavaScript Date Methods\nThere are various methods available in JavaScript Date object.\nMethod\tDescription\nnow()\tReturns the numeric value corresponding to the current time (the number of milliseconds elapsed since January 1, 1970 00:00:00 UTC)\ngetFullYear()\tGets the year according to local time\ngetMonth()\tGets the month, from 0 to 11 according to local time\ngetDate()\tGets the day of the month (1\u201331) according to local time\ngetDay()\tGets the day of the week (0-6) according to local time\ngetHours()\tGets the hour from 0 to 23 according to local time\ngetMinutes\tGets the minute from 0 to 59 according to local time\ngetUTCDate()\tGets the day of the month (1\u201331) according to universal time\nsetFullYear()\tSets the full year according to local time\nsetMonth()\tSets the month according to local time\nsetDate()\tSets the day of the month according to local time\nsetUTCDate()\tSets the day of the month according to universal time\n\n```jsx\nconst timeInMilliseconds = Date.now();\nconsole.log(timeInMilliseconds); // 1593765214488\n\nconst time = new Date;\n\n// get day of the month\nconst date = time.getDate();\nconsole.log(date); // 30\n\n// get day of the week\nconst year = time.getFullYear();\nconsole.log(year); // 2020\n\nconst utcDate = time.getUTCDate();\nconsole.log(utcDate); // 30\n\nconst event = new Date(\'Feb 19, 2020 23:15:30\');\n// set the date\nevent.setDate(15);\nconsole.log(event.getDate()); // 15\n\n// Only 28 days in February!\nevent.setDate(35);\n\nconsole.log(event.getDate()); // 7\n```\n### Formatting a Date\nUnlike other programming languages, JavaScript does not provide a built-in function for formatting a date.\nHowever, you can extract individual bits and use it like this.\n```jsx\nconst currentDate = new Date();\nconst date = currentDate.getDate();\nconst month = currentDate.getMonth();\nconst year = currentDate.getFullYear();\n\n// show in specific format\nlet monthDateYear = (month+1) + \'/\' + date + \'/\' + year;\n\nconsole.log(monthDateYear); // 7/3/2020\n```\nNote: The above program gives inconsistent length as date and month have single-digit and double-digit.\n\n### AutoCorrection in Date Object\nWhen you assign out of range values in the Date object, it auto-corrects itself. For example,\n```jsx\nconst date = new Date(2008, 0, 33);\n// Jan does not have 33 days\n\nconsole.log(date);\n```\n\nYou can also check out the [Demo](https://praveenoruganti.github.io/courses/demo/js/DateTime)\n\n\n\n\n '}}]);