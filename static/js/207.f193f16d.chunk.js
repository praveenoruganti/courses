(this["webpackJsonppraveenoruganti-courses"]=this["webpackJsonppraveenoruganti-courses"]||[]).push([[207],{776:function(e,n,t){"use strict";t.r(n),n.default=' **Hibernate and Spring Integration**\n\n- We can simply integrate hibernate application with spring application.\n- In hibernate framework, we provide all the database information in hibernate.cfg.xml file.\n- But if we are going to integrate the hibernate application with spring, we don\'t need to create the hibernate.cfg.xml file. We can provide all the information in the applicationContext.xml file.\n\n**Advantage of Spring framework with hibernate**\n\n- The Spring framework provides HibernateTemplate class, so you don\'t need to follow so many steps like create Configuration, BuildSessionFactory, Session, beginning and committing transaction etc.\n- So it saves a lot of code.\n\n**Understanding problem without using Spring**\n\n```jsx\n//creating configuration\nConfiguration cfg=new Configuration();\ncfg.configure("hibernate.cfg.xml");\n\n//creating session factory object\nSessionFactory factory=cfg.buildSessionFactory();\n\n//creating session object\nSession session=factory.openSession();\n\n//creating transaction object\nTransaction t=session.beginTransaction();\n\nEmployee e1=new Employee(111,"Praveen",40000);\nsession.persist(e1);//persisting the object\n\nt.commit();//transaction is commited\nsession.close();\n\n```\n\n- As you can see in the code of hibernate, you have to follow so many steps.\n- Solution by using, HibernateTemplate class of Spring Framework and\n- In applicationContext.xml file, we are providing all the informations of the database in the BasicDataSource object.\n- This object is used in the LocalSessionFactoryBean class object, containing some other informations such as mappingResources and hibernateProperties.\n- The object of LocalSessionFactoryBean class is used in the HibernateTemplate class.\n- Now, you don\'t need to follow so many steps. You can simply write this:\n\n```jsx\n    Employee e1=new Employee(111,"arun",40000);\n    hibernateTemplate.save(e1);\n```\n\n- Methods of HibernateTemplate class\n\n  1. void persist(Object entity)\n  2. Serializable save(Object entity)\n  3. void saveOrUpdate(Object entity)\n  4. void update(Object entity)\n  5. void delete(Object entity)\n  6. Object get(Class c, Serializable id)\n  7. Object load(Class c, Serializable id)\n  8. List loadall(Class c)\n '}}]);