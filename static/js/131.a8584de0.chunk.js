(this["webpackJsonppraveenoruganti-courses"]=this["webpackJsonppraveenoruganti-courses"]||[]).push([[131],{700:function(n,t,e){"use strict";e.r(t),t.default=' \n```jsx\n\n// Local Variable Type Inference - Java 10\n\n    // Before\n        int[] nums = new int[10];\n        List<String> numsList = new ArrayList<>();\n\n    // From Java 10\n        var nums1 = new int[10];\n        var numsList1 = new ArrayList<String>();\n\n// Switch Expressions - Java 17\n\n    // Before\n        int day = 4;\n        switch (day) {\n            case 1:\n                System.out.println("Monday");\n                break;\n            case 2:\n                System.out.println("Tuesday");\n                break;\n            case 3:\n                System.out.println("Wednesday");\n                break;\n            case 4:\n                System.out.println("Thursday");\n                break;\n            case 5:\n                System.out.println("Friday");\n                break;\n            case 6:\n                System.out.println("Saturday");\n                break;\n            case 7:\n                System.out.println("Sunday");\n                break;\n            case 8:\n                System.out.println("Monday");\n                break;\n            default:\n                System.out.println("Not Applicable");\n        }\n\n    // From Java 14\n        day = 8;\n        switch (day) {\n            case 1, 8 -> System.out.println("Monday");\n            case 2 -> System.out.println("Tuesday");\n            case 3 -> System.out.println("Wednesday");\n            case 4 -> System.out.println("Thursday");\n            case 5 -> System.out.println("Friday");\n            case 6 -> System.out.println("Saturday");\n            case 7 -> System.out.println("Sunday");\n            default -> System.out.println("Not Applicable");\n        }\n\n// Text Blocks - Java 15\n\n    // Before\n        String address = "25 Main Street\nAnytown, India, 500076\n";\n        System.out.println(address);\n\n    // From Java 15\n\n        String address1 = """\n                25 Main Street\n                Anytown, India, 500076\n                """;\n        System.out.println(address1);\n\n// Record Classes - Java 16\n\n   // Before\n        import java.util.Objects;\n\n        public final class Book {\n            private final String title;\n            private final String author;\n            private final String isbn;\n\n            public Book(String title, String author, String isbn) {\n                this.title = title;\n                this.author = author;\n                this.isbn = isbn;\n            }\n\n            public String getTitle() {\n                return title;\n            }\n\n            public String getAuthor() {\n                return author;\n            }\n\n            public String getIsbn() {\n                return isbn;\n            }\n\n            @Override\n            public boolean equals(Object o) {\n                if (this == o) return true;\n                if (o == null || getClass() != o.getClass()) return false;\n                Book book = (Book) o;\n                return Objects.equals(title, book.title) && Objects.equals(author, book.author) && Objects.equals(isbn, book.isbn);\n            }\n\n            @Override\n            public int hashCode() {\n                return Objects.hash(title, author, isbn);\n            }\n\n            @Override\n            public String toString() {\n                return "Book{" +\n                        "title=\'" + title + \'\'\' +\n                        ", author=\'" + author + \'\'\' +\n                        ", isbn=\'" + isbn + \'\'\' +\n                        \'}\';\n            }\n\n            public static void main(String[] args) {\n                Book book = new Book("Java", "Praveen Oruganti", "232111111");\n                System.out.println(book);\n            }\n        }\n\n    // From Java 16\n\n        public record Book(String title, String author, String isbn) {\n\n            public static void main(String[] args) {\n                Book book = new Book("Java", "Praveen Oruganti", "232111111");\n                System.out.println(book);\n            }\n       }\n\n// Pattern Matching for instanceof - Java 16\n\n   // Before\n        Object obj = "TEST";\n\n        if (obj instanceof String) {\n            String t = (String) obj;\n            // do some logic...\n        }\n    \n   // From Java 16\n        Object obj = "TEST";\n\n        if (obj instanceof String t) {\n            // do some logic\n        }\n\n// Sealed Types(Class and Interface) - Java 17\n\n   // Before\n\n    public class Vehicles {\n\n            abstract static class Vehicle {\n\n                private final String registrationNumber;\n\n                public Vehicle(String registrationNumber) {\n                    this.registrationNumber = registrationNumber;\n                }\n\n                public String getRegistrationNumber() {\n                    return registrationNumber;\n                }\n\n            }\n\n            public static final class Car extends Vehicle {\n\n                private final int numberOfSeats;\n\n                public Car(int numberOfSeats, String registrationNumber) {\n                    super(registrationNumber);\n                    this.numberOfSeats = numberOfSeats;\n                }\n\n                public int getNumberOfSeats() {\n                    return numberOfSeats;\n                }\n\n            }\n\n            public static final class Truck extends Vehicle {\n\n                private final int loadCapacity;\n\n                public Truck(int loadCapacity, String registrationNumber) {\n                    super(registrationNumber);\n                    this.loadCapacity = loadCapacity;\n                }\n\n                public int getLoadCapacity() {\n                    return loadCapacity;\n                }\n\n            }\n\n        }\n\n    // From Java 17\n\n        public sealed interface Service permits Car, Truck {\n\n            int getMaxServiceIntervalInMonths();\n\n            default int getMaxDistanceBetweenServicesInKilometers() {\n                return 100000;\n            }\n\n        }\n        public abstract sealed class Vehicle permits Car, Truck {\n\n            protected final String registrationNumber;\n\n            public Vehicle(String registrationNumber) {\n                this.registrationNumber = registrationNumber;\n            }\n\n            public String getRegistrationNumber() {\n                return registrationNumber;\n            }\n\n        }\n\n        public final class Truck extends Vehicle implements Service {\n\n            private final int loadCapacity;\n\n            public Truck(int loadCapacity, String registrationNumber) {\n                super(registrationNumber);\n                this.loadCapacity = loadCapacity;\n            }\n\n            public int getLoadCapacity() {\n                return loadCapacity;\n            }\n\n            @Override\n            public int getMaxServiceIntervalInMonths() {\n                return 18;\n            }\n\n        }\n\n        public non-sealed class Car extends Vehicle implements Service {\n\n            private final int numberOfSeats;\n\n            public Car(int numberOfSeats, String registrationNumber) {\n                super(registrationNumber);\n                this.numberOfSeats = numberOfSeats;\n            }\n\n            public int getNumberOfSeats() {\n                return numberOfSeats;\n            }\n\n            @Override\n            public int getMaxServiceIntervalInMonths() {\n                return 12;\n            }\n\n        }\n\n\n``` '}}]);