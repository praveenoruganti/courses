(this["webpackJsonppraveenoruganti-courses"]=this["webpackJsonppraveenoruganti-courses"]||[]).push([[248],{817:function(n,e,a){"use strict";a.r(e),e.default=" **SQL Query to find second highest salary of Employee**\n\n```jsx\nselect MAX(Salary) from Employee \nWHERE Salary \nNOT IN (select MAX(Salary) from Employee );\n```\n**SQL Query to find Max Salary from each department.**\n\n```jsx\nSELECT DeptID, MAX(Salary) FROM Employee GROUP BY DeptID;\n```\n\n**Write a SQL Query to print the name of distinct employee whose DOB is between 01/01/1960 to 31/12/1975**\n\n```jsx\nSELECT DISTINCT EmpName FROM Employees\nWHERE DOB BETWEEN '01/01/1960' AND '31/12/1975';\n```\n\n**Write an SQL Query find number of employees according to gender whose DOB is between 01/01/1960 to 31/12/1975.**\n\n```jsx\nSELECT COUNT(*), sex FROM Employees \nWHERE DOB BETWEEN '01/01/1960' AND '31/12/1975' GROUP BY sex;\n\n```\n\n**Write an SQL Query to find employee whose Salary is equal or greater than 10000.**\n\n```jsx\nSELECT EmpName FROM Employees WHERE Salary>=10000;\n```\n\n**Write an SQL Query to find name of employee whose name Start with 'M'**\n\n```jsx\nSELECT * FROM Employees WHERE EmpName like 'M%';\n```\n\n**Find the 3rd MAX salary in the emp table.**\n\n```jsx\nSELECT distinct sal FROM emp e1 \nWHERE 3 = (SELECT count(distinct sal) FROM emp e2 WHERE e1.sal <= e2.sal);\n```\n\n**Find the 3rd MIN salary in the emp table.**\n\n```jsx\nSELECT distinct sal FROM emp e1 WHERE 3 = (SELECT count(distinct sal) FROM emp e2 WHERE e1.sal >= e2.sal);\n```\n\n**List dept no., Dept name for all the departments in which there are no employees in the department**\n\n```jsx\nSELECT * FROM dept \nWHERE deptno \nNOT IN (SELECT deptno FROM emp);\n\n```\n\n**How to get 3 Max salaries ?**\n\n```jsx\nselect distinct sal from emp a where 3 >= (select count(distinct sal) from emp b where a.sal <= b.sal) order by a.sal desc;\n```\n\n**How to get 3 Min salaries ?**\n\n```jsx\nselect distinct sal from emp a where 3 >= (select count(distinct sal) from emp b where a.sal >= b.sal);\n```\n\n**How to get nth max salaries ?**\n\n```jsx\nselect distinct hiredate from emp a where &n = (select count(distinct sal) from emp b where a.sal >= b.sal);\n```\n\n**How to print duplicate rows in a table?**\n\nLet us consider below table.\n\nName Section\n\nabc CS1\n\nbcd CS2\n\nabc CS1\n\nIn the above table, we can find duplicate row using below query.\n\n```jsx\nSELECT name, section FROM tbl\nGROUP BY name, section\nHAVING COUNT(*) > 1\n```\n**Fetch only odd rows from table**\n\n```jsx\nSELECT E.EMPID,E.PROJECT,E.SALARY FROM(SELECT *,ROW_NUMBER() OVER(ORDER BY EMPID) AS ROWNUMBER FROM EMPLOYEESALARY E WHERE E.ROWNUMBER%2=1\n```\n\n**Create an empty table with same structure as so other table**\n```jsx\nSELECT * INTO NEWTABLE FROM EMPLOYEEDETAILS WHERE 1=0;\n```\n\n**Write a SQL query to find current daya-time**\nMYSQL\n```jsx\nSELECT NOW();\n```\nSQLSERVER\n```jsx\nSELECT getdate();\n```\nORACLE\n\n```jsx\nSELECT SYSDATE FROM DUAL;\n```\n\n**How to Get the names of the table in SQL?**\n\n```jsx\nSELECT * FROM INFORMATION_SCHEMA.TABLES\n```\n\n**Return employee record with max salary**\n\n```jsx\nSelect * from employee where sal=(select max(sal) from employee);\n```\n\n**Select highest salary in employee table**\n\n```jsx\nSELECT MAX(SAL) FROM  EMPLOYEE;\n```\n\n**Select 2nd highest salary in employee table**\n\n```jsx\nSELECT MAX(SAL) FROM EMPLOYEE WHERE SAL NOT IN (SELECT MAX(SAL) FROM EMPLOYEE);\n```\n\n**How to find Nth highest salary from a table?**\n\nSQLSERVER:\n\n```jsx\nSELECT TOP 1 SALARY\nFROM(SELECT DISTINCT TOP N SALARY \nFROM EMPLOYEE ORDER BY SALARY DESC) \nORDER BY SALARY ASC;\n```\n\nMYSQL:\n\n```jsx\nSELECT SALARY FROM EMPLOYEE ORDER BY SALARY DESC LIMIT N-1,1;\nWITHOUT USING LIMIT and TOP\nSELECT e1.SALARY FROM EMPLOYEE e1\nWHERE N = (SELECT COUNT(DISTINCT(e2.SALARY))\nFROM EMPLOYEE e2 WHERE e2.SALARY > e1.SALARY);\n```\n\n**Select range of employee based on id **\n```jsx\nSelect * from employee where employee_id between 2003 and 2008\n```\n\n**Return employee name,highest salary and department name**\n```jsx\nSELECT e.employee_name,e.salary,d.department_name \nfrom Employee e \nINNER JOIN Department d \nON (e.department_id=d.department_id) \nWHERE salary in(select max(salary) from employee);\n```\n\n**Display the names of employees who are not working as managers.**\n```jsx\nselect * from emp minus (select * from emp where empno in (select mgr from emp));\n(or)\nselect * from emp where empno not in (select mgr from emp where mgr is not null);\n(or)\nselect * from emp e where empno not in (select mgr from emp where e.empno=mgr)\n```\n\n**Display those employees who are working as manager?**\n```jsx\nselect * from emp where empno in(select mgr from emp);\n```\n**Display the manager who is having maximum number of employees working under him?**\n```jsx\nSelect mgr from emp group by mgr having count(*)=(select max(count(mgr)) from emp group by mgr);\n```\n**Return highest salary,employee name, department name for each department**\n```jsx\nSelect e.employee)name,e.salary,d.department_name from Employee e Inner Join Department d ON (e.department_id=d.department_id) where salary in (select max(salary) from Employee group by department_id);\n```\n**Delete duplicate data from table only first data remains constant.**\n```jsx\nDELETE M1\nFrom managers M1, managers M2\nWhere M2.Name = M1.Name AND M1.Id>M2.Id;\n```\n**Drop primary key on employee table**\n```jsx\nALTER TABLE EMPLOYEE drop CONSTRAINT EMPLOYEE_PK;\n```\n\n**Get department wise minimum salary from employee table order by salary ascending**\n```jsx\nSELECT DEPARTMENT,min(SALARY) MINSALARY FROM EMPLOYEE GROUP BY DEPARTMENT ORDER BY MINSALARY ASC.\n```\n\n**How to select unique records from a table?**\n```jsx\nSelect DISTINCT EmployeeId, EmployeeName from Employee\n```\n**Display the list of employees who have joined the company before 30th June 90 or after 31st dec 90.**\n```jsx\nselect * from emp where hiredate between \u201830-jun-1990\u2019 and \u201831-dec-1990\u2019;\n```\n**Write an sql query to find number of employees according to gender whose DOB is between 01/01/1960 to 31/12/1975.**\n```jsx\nSELECT COUNT(*),sex from Employees where DOB BETWEEN \u201801/01/1960\u2019 AND \u201831/12/1975\u2019 GROUP BY sex;\n```\n**Display the names of employees whose name starts with alphabet S.**\n```jsx\nselect ename from emp where ename like \u2018S%\u2019;\n```\n**Display employee names for employees whose name ends with alphabet S.**\n```jsx\nselect ename from emp where ename like \u2018%S\u2019;\n```\n**Display the names of employees whose names have second alphabet S in their names.**\n```jsx\nselect ename from emp where ename like \u2018_S%\u2019;\n```\n**Write a SQL query to fetch common records between two tables.**\n```jsx\nSELECT * FROM EmployeeSalary\nINTERSECT\nSELECT * FROM ManagerSalary\n```\n\n**Write a SQL query to fetch records that are present in one table but not in another table.**\n```jsx\nSELECT * FROM EmployeeSalary\nMINUS\nSELECT * FROM ManagerSalary\n```\n**Write a SQL query to fetch top n records?**\n\nIn mySQL using LIMIT,\n```jsx\nSELECT * FROM EmployeeSalary ORDER BY Salary DESC LIMIT N\n```\nIn SQL server using TOP command,\n```jsx\nSELECT TOP N * FROM EmployeeSalary ORDER BY Salary DESC\n```\nIn Oracle using ROWNUM,\n```jsx\nSELECT * FROM (SELECT * FROM EmployeeSalary ORDER BY Salary DESC)\nWHERE ROWNUM <= N;\n```\n**Find the factorial of a number in pl/sql**\n```jsx\ndeclare\n-- it gives the final answer after computation\nfac number :=1;\n\n-- given number n\n-- taking input from user\nn number := &1;\n\n-- start block\nbegin\n\n-- start while loop\nwhile n > 0 loop\n\n-- multiple with n and decrease n's value\nfac:=n*fac;\nn:=n-1;\nend loop;\n-- end loop\n\n-- print result of fac\ndbms_output.put_line(fac);\n\n-- end the begin block\nend;\n\n```\n**Count odd and even digits in a number in PL/SQL**\n```jsx\n--Odd and Even digits in a number\n--in PL/SQL\nDECLARE\n--num variable declared\n--num assign with a number\nnum NUMBER := 123456;\n--len varible char declared\nlen VARCHAR2(20);\n--cntvarible declared\ncnt1 NUMBER(5) := 0;\ncnt2 NUMBER(5) := 0;\nBEGIN\n--for loop go from 1 to length of the number\nFOR i IN 1..Length(num)\nLOOP\nlen := Substr(num, i, 1);\nIF mod(len, 2) != 0 THEN\ncnt1 := cnt1 + 1;\nELSE\ncnt2:=cnt2+1;\nEND IF;\nEND LOOP;\n--end loop\ndbms_output.Put_line('Odd Digits: '\n|| cnt1);\ndbms_output.Put_line('Even Digits: '\n|| cnt2);\n--display result\nEND;\n--end program\n```\n**Check whether a string is palindrome or not in PL/SQL**\n```jsx\nDECLARE\n-- Declared variables are s, l, t .\n-- These variables are of same data type VARCHAR.\ns VARCHAR2(10) := 'abccba';\nl VARCHAR2(20);\nt VARCHAR2(10);\nBEGIN\nFOR i IN REVERSE 1..Length(s) LOOP\nl := Substr(s, i, 1);\n-- here || are used for concatenation of string.\nt := t\n||''\n||l;\nEND LOOP;\nIF t = s THEN\ndbms_output.Put_line(t\n||''\n||' is palindrome');\nELSE\ndbms_output.Put_line(t\n||''\n||' is not palindrome');\nEND IF;\nEND;\n-- Program End\n```\n**Count no. of characters and words in a string in PL/SQL**\n```jsx\nDECLARE\n-- Declare required variables\nstr VARCHAR2(40) := 'Praveen Oruganti'';\nnoofchars NUMBER(4) := 0;\nnoofwords NUMBER(4) := 1;\ns CHAR;\nBEGIN\nFOR i IN 1..Length(str) LOOP\ns := Substr(str, i, 1);\n-- Count no. of characters\nnoofchars := noofchars + 1;\n-- Count no. of words\nIF s = ' ' THEN\nnoofwords := noofwords + 1;\nEND IF;\nEND LOOP;\ndbms_output.Put_line('No. of characters:'\n||noofchars);\ndbms_output.Put_line('No. of words: '\n||noofwords);\nEND;\n-- Program End\n```\n**Swap two numbers in PL/SQL without using temp**\n```jsx\nDECLARE\n-- declare variable num1, num2\n-- of datatype number\nnum1 NUMBER;\nnum2 NUMBER;\nBEGIN\nnum1 := 1000;\nnum2 := 2000;\n-- print result before swapping\ndbms_output.Put_line('Before');\ndbms_output.Put_line('num1 = '\n|| num1\n||' num2 = '\n|| num2);\n-- swapping of numbers num1 and num2\nnum1 := num1 + num2;\nnum2 := num1 - num2;\nnum1 := num1 - num2;\n-- print result after swapping\ndbms_output.Put_line('After');\ndbms_output.Put_line('num1 = '\n|| num1\n||' num2 = '\n|| num2);\nEND;\n-- Program End\n```\n**No. of vowels and consonants in a given string in PL/SQL**\n```jsx\nDECLARE\n-- Here variable V is varchar datatype\n-- and flag variable is number datatype\n-- variable c is char datatype .\nv VARCHAR2(400) := 'Praveen Oruganti'';\nnoofvowels NUMBER := 0;\nnoofconsonants NUMBER := 0;\nC CHAR;\nBEGIN\nFOR i IN 1..Length(v) LOOP\nc := Substr(v, i, 1);\n-- Check if the current character is vowel\nIF c IN ( 'A', 'E', 'I', 'O', 'U' )\nOR c IN ( 'a', 'e', 'i', 'o', 'u' ) THEN\nnoofvowels := noofvowels + 1;\n-- Else current character is a consonant except space\nELSE\nIF c NOT IN ( ' ' ) THEN\nnoofconsonants := noofconsonants + 1;\nEND IF;\nEND IF;\nEND LOOP;\ndbms_output.Put_line('No. of Vowels: '\n|| noofvowels);\ndbms_output.Put_line('No. of Consonants: '\n|| noofconsonants);\nEND;\n-- Program End\n```\n**Sum of the first and last digit of a number in PL/SQL**\n```jsx\nDECLARE\n-- declare variables are A, B, C and S\n-- these are same datatype integer\na INTEGER := 14598;\nb INTEGER := 0;\nC INTEGER := 0;\ns INTEGER;\nBEGIN\nIF a > 9 THEN\nc := Substr(a, 1, 1);\nb := Substr(a, Length(a), 1);\ns := b + c;\nELSE\ns := a;\nEND IF;\ndbms_output.Put_line('Sum of the first and last digit is '\n||s);\nEND;\n-- Program End\n``` "}}]);