(this["webpackJsonppraveenoruganti-courses"]=this["webpackJsonppraveenoruganti-courses"]||[]).push([[245],{814:function(e,n,t){"use strict";t.r(n),n.default=' When we are publishing any API to consumer we need to send across the API specification and now a days we are providing this via swagger spec.\n\nLets see how we can develop the swagger spec of an API and integrate the same in Spring Boot Application.\n\nIn order to integrate swagger in SpringBoot Application, we need to follow the below steps.\n\n1. Include below open api dependency in pom.xml\n\n```jsx\n<dependency>\n  <groupId>org.springdoc</groupId>\n  <artifactId>springdoc-openapi-ui</artifactId>\n  <version>1.5.12</version>\n</dependency>\n```\n\n2. Create customOpenApi Bean\n\n```jsx\n@Bean\npublic OpenAPI customOpenAPI(ApplicationConfig applicationConfig) {\n        return new OpenAPI().components(new Components()).info(new Info().title(applicationConfig.getOpenApiTitle())\n                        .description(applicationConfig.getOpenApiDescription())\n                        .contact(new Contact().name("Praveen Oruganti").email("praveenoruganti@gmail.com")\n                                        .url("https://praveenoruganti.github.io"))\n                        .termsOfService("https://praveenoruganti.github.io/#/aboutme")\n                        .license(new License().name("GNU General Public License v3.0").url("https://www.gnu.org/licenses")));\n}\n\n```\n\n3. Lets include some properties in application.yml\n\n```jsx\nspringdoc:\n   use-fqn: true\n   swagger-ui:\n    doc-expansion: none\n    operationsSorter: method\n#   supportedSubmitMethods: []\n\napp:\n openApiTitle: Hello Service\n openApiDescription: |\n\n       Hello Service\n\n```\n\n4. Lets include @Tag and @Operation to provide the definition in controller class\n\n```jsx\n@RestController\n@RequestMapping("/api/v1_0")\n@Validated\n@Tag(description = "Hello Operations", name = "Hello Operations")\npublic class HelloController {\n\n\t@GetMapping("/hello/{name}")\n\t@LoggingAspect\n\t@TrackExecutionTime\n\t@Operation(description = "Say Hello Based on Name", summary = "Say Hello Based on Name")\n\tpublic String sayHelloUser(@PathVariable("name") @NotBlank @Size(max = 20) String name) {\n\t\treturn "Hello " + name;\n\t}\n\n\t@GetMapping("/hello")\n\t@LoggingAspect\n\t@TrackExecutionTime\n\t@Operation(description = "Say Hello Based on First Name and Last Name", summary = "Say Hello Based on First Name and Last Name")\n\tpublic HelloResponse sayHello(@RequestBody @Valid User user) {\n\t\treturn HelloResponse.builder().status("Success").appId(user.getAppId()).data(HelloResponseData.builder()\n\t\t\t\t.executed(true).response("Hello " + user.getFirstName() + " " + user.getLastName()).build()).build();\n\t}\n\n}\n\n\n```\n\n5. Lets incude @Schema in Model class\n\n```jsx\n@AllArgsConstructor\n@NoArgsConstructor\n@Data\n@SuperBuilder\npublic class User {\n\n\t@AppId\n\t@NotNull\n\t@Schema(required = true,  example = "Test")\n\tprivate String appId;\n\n\t@Size(max = 10)\n\t@NotBlank\n\t@Schema(required = true,  example = "Praveen")\n\tprivate String firstName;\n\n\t@Size(max = 10)\n\t@NotBlank\n\t@Schema(required = true,  example = "Oruganti")\n\tprivate String lastName;\n}\n\n```\n\n```jsx\n@Data\n@SuperBuilder\n@NoArgsConstructor\n@Schema(name ="ErrorMessage",example= "Error Details to describe the Client, Business and System Errors")\npublic class ErrorMessage {\n\n\t@Schema(required = true, name = "code", description = "4000,6000,5000", example = "4000")\n\tprivate String code;\n\n\t@Schema(required = true, name = "description", description = "Input Request Validation Failure and Internal Service Failures", example = "Input Request Validation Failure")\n\tprivate String description;\n\n\t@Schema(required = true, name = "errors", example = "{"400001":"Request Json is malformed or invalid"}")\n\tprivate Map<String, String> errors;\n\n}\n\n```\n\n6. We can launch the swagger using [http://localhost:8080/swagger-ui/index.html](http://localhost:8080/swagger-ui/index.html)\n\n![screenshot of the app](https://praveenoruganti.github.io/courses/images/springboot/swagger2.png)\n '}}]);